{"ast":null,"code":"import _objectSpread from\"/home/sring/BC-15/devops-bootcamp-jan22/BC15-green-commute/web-ui/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import{Autocomplete}from\"@material-ui/lab\";import CustomChip from\"./CustomChip\";import{IconButton,InputAdornment,InputBase,TextField,Typography}from\"@material-ui/core\";import React from\"react\";import{connect}from\"react-redux\";import{convertToSentenceCase}from\"../../../state/converter/jobConverter\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var PlainInputField=function PlainInputField(_ref){var classes=_ref.classes,isMulti=_ref.isMulti,options=_ref.options,icon=_ref.icon,placeholder=_ref.placeholder,onChange=_ref.onChange,value=_ref.value,Skills=_ref.Skills;return/*#__PURE__*/_jsx(Autocomplete,{multiple:isMulti,options:options,defaultValue:Skills,onChange:onChange,value:value,className:classes.root,getOptionLabel:function getOptionLabel(option){return convertToSentenceCase(option);},renderTags:function renderTags(chips,getTagProps){return chips.map(function(option,index){return/*#__PURE__*/_jsx(CustomChip,_objectSpread({variant:\"outlined\",label:/*#__PURE__*/_jsx(Typography,{className:classes.chipLabel,variant:'h4',children:option}),size:\"small\"},getTagProps({index:index})));});},renderInput:function renderInput(params){return!isMulti?/*#__PURE__*/_jsxs(\"div\",{className:classes.innerInputBase,ref:params.InputProps.ref,children:[/*#__PURE__*/_jsx(IconButton,{children:icon}),/*#__PURE__*/_jsx(InputBase,_objectSpread(_objectSpread({},params.inputProps),{},{inputProps:{className:classes['textInput']},placeholder:placeholder}))]}):/*#__PURE__*/_jsx(TextField,_objectSpread(_objectSpread({},params),{},{variant:\"outlined\",placeholder:placeholder,InputProps:_objectSpread(_objectSpread({},params.InputProps),{},{startAdornment:/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(InputAdornment,{position:\"start\",children:icon}),params.InputProps.startAdornment]}),endAdornment:null,classes:{root:classes['textField'],input:classes['textInput']}})}));}});};var mapStateToProps=function mapStateToProps(state){return{Skills:state.skills};};export default connect(mapStateToProps)(PlainInputField);","map":{"version":3,"sources":["/home/sring/BC-15/devops-bootcamp-jan22/BC15-green-commute/web-ui/src/components/molecules/InputTextField/PlainInputField.js"],"names":["Autocomplete","CustomChip","IconButton","InputAdornment","InputBase","TextField","Typography","React","connect","convertToSentenceCase","PlainInputField","classes","isMulti","options","icon","placeholder","onChange","value","Skills","root","option","chips","getTagProps","map","index","chipLabel","params","innerInputBase","InputProps","ref","inputProps","className","startAdornment","endAdornment","input","mapStateToProps","state","skills"],"mappings":"sJAAA,OAAQA,YAAR,KAA2B,kBAA3B,CACA,MAAOC,CAAAA,UAAP,KAAuB,cAAvB,CACA,OAAQC,UAAR,CAAoBC,cAApB,CAAoCC,SAApC,CAA+CC,SAA/C,CAA0DC,UAA1D,KAA2E,mBAA3E,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAAQC,qBAAR,KAAoC,uCAApC,C,6IAEA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,UAAEC,CAAAA,OAAF,MAAEA,OAAF,CAAWC,OAAX,MAAWA,OAAX,CAAoBC,OAApB,MAAoBA,OAApB,CAA6BC,IAA7B,MAA6BA,IAA7B,CAAmCC,WAAnC,MAAmCA,WAAnC,CAA+CC,QAA/C,MAA+CA,QAA/C,CAAyDC,KAAzD,MAAyDA,KAAzD,CAAgEC,MAAhE,MAAgEA,MAAhE,oBACpB,KAAC,YAAD,EACI,QAAQ,CAAEN,OADd,CAEI,OAAO,CAAEC,OAFb,CAGI,YAAY,CAAEK,MAHlB,CAII,QAAQ,CAAEF,QAJd,CAKI,KAAK,CAAEC,KALX,CAMI,SAAS,CAAEN,OAAO,CAACQ,IANvB,CAOI,cAAc,CAAE,wBAACC,MAAD,QAAYX,CAAAA,qBAAqB,CAACW,MAAD,CAAjC,EAPpB,CAQI,UAAU,CAAE,oBAACC,KAAD,CAAQC,WAAR,QACRD,CAAAA,KAAK,CAACE,GAAN,CAAU,SAACH,MAAD,CAASI,KAAT,qBACN,KAAC,UAAD,gBACI,OAAO,CAAC,UADZ,CAEI,KAAK,cAAE,KAAC,UAAD,EAAY,SAAS,CAAEb,OAAO,CAACc,SAA/B,CAA0C,OAAO,CAAE,IAAnD,UAA0DL,MAA1D,EAFX,CAGI,IAAI,CAAC,OAHT,EAIQE,WAAW,CAAC,CAAEE,KAAK,CAALA,KAAF,CAAD,CAJnB,EADM,EAAV,CADQ,EARhB,CAkBI,WAAW,CAAE,qBAACE,MAAD,QACT,CAACd,OAAD,cACI,aAAK,SAAS,CAAED,OAAO,CAACgB,cAAxB,CAAwC,GAAG,CAAED,MAAM,CAACE,UAAP,CAAkBC,GAA/D,wBACI,KAAC,UAAD,WACKf,IADL,EADJ,cAII,KAAC,SAAD,gCACQY,MAAM,CAACI,UADf,MAEI,UAAU,CAAE,CAAEC,SAAS,CAAEpB,OAAO,CAAC,WAAD,CAApB,CAFhB,CAGI,WAAW,CAAEI,WAHjB,GAJJ,GADJ,cAYI,KAAC,SAAD,gCACQW,MADR,MAEI,OAAO,CAAC,UAFZ,CAGI,WAAW,CAAEX,WAHjB,CAII,UAAU,gCACHW,MAAM,CAACE,UADJ,MAENI,cAAc,cAAE,wCAAE,KAAC,cAAD,EAAgB,QAAQ,CAAC,OAAzB,UAAkClB,IAAlC,EAAF,CAA2DY,MAAM,CAACE,UAAP,CAAkBI,cAA7E,GAFV,CAGNC,YAAY,CAAE,IAHR,CAINtB,OAAO,CAAE,CAACQ,IAAI,CAAER,OAAO,CAAC,WAAD,CAAd,CAA4BuB,KAAK,CAAEvB,OAAO,CAAC,WAAD,CAA1C,CAJH,EAJd,GAbK,EAlBjB,EADoB,EAAxB,CA+CA,GAAMwB,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,CAAW,CAC/B,MAAO,CACHlB,MAAM,CAAEkB,KAAK,CAACC,MADX,CAAP,CAGH,CAJD,CAMA,cAAe7B,CAAAA,OAAO,CAAC2B,eAAD,CAAP,CAAyBzB,eAAzB,CAAf","sourcesContent":["import {Autocomplete} from \"@material-ui/lab\";\nimport CustomChip from \"./CustomChip\";\nimport {IconButton, InputAdornment, InputBase, TextField, Typography} from \"@material-ui/core\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport {convertToSentenceCase} from \"../../../state/converter/jobConverter\";\n\nconst PlainInputField = ({classes, isMulti, options, icon, placeholder,onChange, value, Skills}) => (\n    <Autocomplete\n        multiple={isMulti}\n        options={options}\n        defaultValue={Skills}\n        onChange={onChange}\n        value={value}\n        className={classes.root}\n        getOptionLabel={(option) => convertToSentenceCase(option)}\n        renderTags={(chips, getTagProps) =>\n            chips.map((option, index) => (\n                <CustomChip\n                    variant=\"outlined\"\n                    label={<Typography className={classes.chipLabel} variant={'h4'}>{option}</Typography>}\n                    size=\"small\"\n                    {...getTagProps({ index })}\n                />\n            ))\n        }\n        renderInput={(params) => (\n            !isMulti ?\n                <div className={classes.innerInputBase} ref={params.InputProps.ref}>\n                    <IconButton>\n                        {icon}\n                    </IconButton>\n                    <InputBase\n                        {...params.inputProps}\n                        inputProps={{ className: classes['textInput']}}\n                        placeholder={placeholder}\n                        \n                    />\n                </div> :\n                <TextField\n                    {...params}\n                    variant=\"outlined\"\n                    placeholder={placeholder}\n                    InputProps={{\n                        ...params.InputProps,\n                        startAdornment: <><InputAdornment position=\"start\">{icon}</InputAdornment>{params.InputProps.startAdornment}</>,\n                        endAdornment: null,\n                        classes: {root: classes['textField'],input: classes['textInput']}\n                    }}\n                />\n        )}\n    />\n);\n\nconst mapStateToProps = (state) => {\n    return {\n        Skills: state.skills\n    };\n}; \n\nexport default connect(mapStateToProps)(PlainInputField);\n"]},"metadata":{},"sourceType":"module"}