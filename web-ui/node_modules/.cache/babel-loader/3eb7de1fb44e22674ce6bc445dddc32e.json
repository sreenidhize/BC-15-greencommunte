{"ast":null,"code":"var _jsxFileName = \"/home/sring/BC-15/devops-bootcamp-jan22/BC15-green-commute/web-ui/src/components/pages/LandingPage/index.js\",\n    _s = $RefreshSig$();\n\nimport { Grid, makeStyles, withStyles } from \"@material-ui/core\";\nimport React, { useState, useEffect } from \"react\";\nimport TopHeader from \"../../molecules/TopHeader/TopHeader\";\nimport Navbar from \"../../organisms/Navbar/Navbar\";\nimport RoomOutlinedIcon from \"@material-ui/icons/RoomOutlined\";\nimport WorkOutlineIcon from \"@material-ui/icons/WorkOutline\";\nimport JobList from \"../../organisms/JobList/JobList\";\nimport { connect } from \"react-redux\";\nimport { convertServiceToClientJobs, convertServiceToClientJob } from \"../../../state/converter/jobConverter\";\nimport JobDetails from \"../../organisms/JobDetails/JobDetails\";\nimport { apis } from \"../../../utils/resources/resources\";\nimport { experienceLevel, jobType, LandingPageDispatch, landingPageLocationAndSkillParams, landingPageLocationAndSkillStr2, maxDistance } from \"../../../utils/utils/utils\";\nimport JobCommuteRoutes from \"../../organisms/JobCommuteRoutes\";\nimport { points } from \"../../../utils/constants/constant\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n    alignItems: \"flex-start\",\n    overflow: \"none\"\n  },\n  topHeader: {\n    marginTop: theme.spacing(4),\n    marginBottom: theme.spacing(4)\n  },\n  findJobs: {\n    marginTop: theme.spacing(10)\n  },\n  right: {\n    boxSizing: \"border-box\"\n  }\n}));\n\nconst LandingPage = props => {\n  _s();\n\n  const classes = useStyles();\n  const reducerJobs = props.jobs;\n  const skillsUrl = apis.GET_SKILLS;\n  const skillsURL = new URL(skillsUrl);\n\n  const handleSkill = () => {\n    fetch(skillsURL).then(res => res.json()).then(res => props.getAllSkills(res)).catch(e => console.log(e));\n  };\n\n  let params = {};\n  const initialJobLocation = [];\n  let finalJobLocation = \"\";\n  params = landingPageLocationAndSkillParams(params, initialJobLocation, finalJobLocation, props.jobLocation, props.skill, points);\n  finalJobLocation = landingPageLocationAndSkillStr2(initialJobLocation, finalJobLocation, props.jobLocation);\n\n  if (jobType(props.filters)) {\n    params = { ...params,\n      job_type: jobType(props.filters)\n    };\n  }\n\n  if (experienceLevel(props.filters)) {\n    params = { ...params,\n      experience_level: experienceLevel(props.filters)\n    };\n  }\n\n  if (maxDistance(props.filters)) {\n    params = { ...params,\n      distance: maxDistance(props.filters)\n    };\n  }\n\n  if (props.skill.length) {\n    params = { ...params,\n      skill: props.skill\n    };\n  }\n\n  params = { ...params,\n    is_green_commute: props.filters[4].checked\n  };\n  const fetchJobsUrl = new URL(apis.GET_JOBS);\n\n  const handleSearch = () => {\n    Object.keys(params).forEach(key => fetchJobsUrl.searchParams.append(key, params[key]));\n    fetch(fetchJobsUrl).then(res => res.json()).then(res => props.fetchJobs(convertServiceToClientJobs(res))).catch(e => console.log(e));\n  };\n\n  useEffect(() => {\n    handleSearch();\n    handleSkill(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  const fetchJobUrl = new URL(apis.GET_JOBS);\n  const [isPrimaryJobList, setPrimaryJobList] = useState(true);\n  const [isGreenCommuteClicked, setGreenCommuteClicked] = useState(false);\n\n  const onJobCardClick = obj => {\n    fetch(fetchJobUrl + obj.jobId).then(res => res.json()).then(res => {\n      props.fetchJob(convertServiceToClientJob(res));\n      setPrimaryJobList(false);\n      setGreenCommuteClicked(false);\n    }).catch(e => console.log(e));\n  };\n\n  const onBackClick = () => {\n    setGreenCommuteClicked(false);\n  };\n\n  const greenCommuteClick = () => {\n    setGreenCommuteClicked(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    className: classes.root,\n    \"data-testid\": \"landing-page\",\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 2,\n      children: /*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      container: true,\n      xs: 10,\n      className: classes.right,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        className: classes.topHeader,\n        children: /*#__PURE__*/_jsxDEV(TopHeader, {\n          locationLabel: props.userLocation,\n          profileName: \"Bob Joseph\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        item: true,\n        xs: 12,\n        children: [/*#__PURE__*/_jsxDEV(JobList, {\n          isPrimary: isPrimaryJobList,\n          jobs: reducerJobs,\n          placeholder1: \"Search skills\",\n          options1: props.searchOptions1,\n          icon1: /*#__PURE__*/_jsxDEV(CustomWorkOutlined, {\n            fontSize: \"small\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 20\n          }, this),\n          placeholder2: \"Location\",\n          options2: props.searchOptions2,\n          icon2: /*#__PURE__*/_jsxDEV(CustomRoomOutlinedIcon, {\n            fontSize: \"small\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 20\n          }, this),\n          onSearchCLick: handleSearch,\n          onJobCardClick: onJobCardClick,\n          skill: props.skill[0],\n          jobLocation: finalJobLocation,\n          showFindJobs: true,\n          fetchJobs: props.fetchJobs\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), isPrimaryJobList ? \"\" : isGreenCommuteClicked ? /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(JobCommuteRoutes, {\n            selectedCommute: \"metro\",\n            ...props.draftJob,\n            from: props.userLocation,\n            to: props.jobLocation,\n            commuteTypes: props.metroOptions,\n            cabOptions: props.cabOptions,\n            onBackClick: onBackClick,\n            showFindJobs: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(JobDetails, {\n            onGreenCommuteClick: greenCommuteClick,\n            ...props.draftJob,\n            showFindJobs: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LandingPage, \"/KJpTDvHwrzAyV18VE4wpm3RTDM=\", false, function () {\n  return [useStyles];\n});\n\n_c = LandingPage;\nconst CustomWorkOutlined = withStyles({\n  root: {\n    color: \"#5f7381\"\n  }\n})(props => /*#__PURE__*/_jsxDEV(WorkOutlineIcon, { ...props\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 166,\n  columnNumber: 15\n}, this));\nconst CustomRoomOutlinedIcon = withStyles({\n  root: {\n    color: \"#5f7381\"\n  }\n})(props => /*#__PURE__*/_jsxDEV(RoomOutlinedIcon, { ...props\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 172,\n  columnNumber: 15\n}, this));\n\nconst mapStateToProps = state => {\n  return {\n    jobs: state.jobs,\n    searchOptions1: state.searchOptions1,\n    searchOptions2: state.searchOptions2,\n    jobLocation: state.jobLocation,\n    userLocation: state.userLocation,\n    skill: state.skills,\n    filters: state.filters,\n    draftJob: state.draftJob,\n    cabOptions: state.cabOptions,\n    metroOptions: state.metroOptions\n  };\n};\n\nLandingPageDispatch();\nexport default connect(mapStateToProps, LandingPageDispatch)(LandingPage);\n\nvar _c;\n\n$RefreshReg$(_c, \"LandingPage\");","map":{"version":3,"sources":["/home/sring/BC-15/devops-bootcamp-jan22/BC15-green-commute/web-ui/src/components/pages/LandingPage/index.js"],"names":["Grid","makeStyles","withStyles","React","useState","useEffect","TopHeader","Navbar","RoomOutlinedIcon","WorkOutlineIcon","JobList","connect","convertServiceToClientJobs","convertServiceToClientJob","JobDetails","apis","experienceLevel","jobType","LandingPageDispatch","landingPageLocationAndSkillParams","landingPageLocationAndSkillStr2","maxDistance","JobCommuteRoutes","points","useStyles","theme","root","display","alignItems","overflow","topHeader","marginTop","spacing","marginBottom","findJobs","right","boxSizing","LandingPage","props","classes","reducerJobs","jobs","skillsUrl","GET_SKILLS","skillsURL","URL","handleSkill","fetch","then","res","json","getAllSkills","catch","e","console","log","params","initialJobLocation","finalJobLocation","jobLocation","skill","filters","job_type","experience_level","distance","length","is_green_commute","checked","fetchJobsUrl","GET_JOBS","handleSearch","Object","keys","forEach","key","searchParams","append","fetchJobs","fetchJobUrl","isPrimaryJobList","setPrimaryJobList","isGreenCommuteClicked","setGreenCommuteClicked","onJobCardClick","obj","jobId","fetchJob","onBackClick","greenCommuteClick","userLocation","searchOptions1","searchOptions2","draftJob","metroOptions","cabOptions","CustomWorkOutlined","color","CustomRoomOutlinedIcon","mapStateToProps","state","skills"],"mappings":"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","sourcesContent":["import { Grid, makeStyles, withStyles } from \"@material-ui/core\";\nimport React, { useState, useEffect } from \"react\";\nimport TopHeader from \"../../molecules/TopHeader/TopHeader\";\nimport Navbar from \"../../organisms/Navbar/Navbar\";\nimport RoomOutlinedIcon from \"@material-ui/icons/RoomOutlined\";\nimport WorkOutlineIcon from \"@material-ui/icons/WorkOutline\";\nimport JobList from \"../../organisms/JobList/JobList\";\nimport { connect } from \"react-redux\";\nimport {\n  convertServiceToClientJobs,\n  convertServiceToClientJob,\n} from \"../../../state/converter/jobConverter\";\nimport JobDetails from \"../../organisms/JobDetails/JobDetails\";\nimport { apis } from \"../../../utils/resources/resources\";\nimport { experienceLevel, jobType, LandingPageDispatch, landingPageLocationAndSkillParams, landingPageLocationAndSkillStr2, maxDistance } from \"../../../utils/utils/utils\";\nimport JobCommuteRoutes from \"../../organisms/JobCommuteRoutes\";\nimport { points } from \"../../../utils/constants/constant\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    alignItems: \"flex-start\",\n    overflow: \"none\",\n  },\n  topHeader: {\n    marginTop: theme.spacing(4),\n    marginBottom: theme.spacing(4),\n  },\n  findJobs: {\n    marginTop: theme.spacing(10),\n  },\n  right: {\n    boxSizing: \"border-box\",\n  },\n}));\n\nconst LandingPage = (props) => {\n  const classes = useStyles();\n  const reducerJobs = props.jobs;\n  const skillsUrl = apis.GET_SKILLS;\n  const skillsURL = new URL(skillsUrl);\n  const handleSkill = () => {\n    fetch(skillsURL)\n      .then((res) => res.json())\n      .then((res) => props.getAllSkills(res))\n      .catch((e) => console.log(e));\n  };\n  let params = {};\n  const initialJobLocation = [];\n  let finalJobLocation = \"\";\n  params = landingPageLocationAndSkillParams(params, initialJobLocation, finalJobLocation, props.jobLocation, props.skill, points);\n  finalJobLocation = landingPageLocationAndSkillStr2(initialJobLocation, finalJobLocation, props.jobLocation);\n  if (jobType(props.filters)) {\n    params = { ...params, job_type: jobType(props.filters) };\n  }\n\n  if (experienceLevel(props.filters)) {\n    params = { ...params, experience_level: experienceLevel(props.filters) };\n  }\n  if (maxDistance(props.filters)) {\n    params = { ...params, distance: maxDistance(props.filters) };\n  }\n  if (props.skill.length) {\n    params = { ...params, skill: props.skill };\n  }\n  params = { ...params, is_green_commute: props.filters[4].checked };\n  const fetchJobsUrl = new URL(apis.GET_JOBS);\n  const handleSearch = () => {\n    Object.keys(params).forEach((key) =>\n      fetchJobsUrl.searchParams.append(key, params[key])\n    );\n    fetch(fetchJobsUrl)\n      .then((res) => res.json())\n      .then((res) => props.fetchJobs(convertServiceToClientJobs(res)))\n      .catch((e) => console.log(e));\n  };\n\n  useEffect(() => {\n    handleSearch();\n    handleSkill();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const fetchJobUrl = new URL(apis.GET_JOBS);\n  const [isPrimaryJobList, setPrimaryJobList] = useState(true);\n  const [isGreenCommuteClicked, setGreenCommuteClicked] = useState(false);\n  const onJobCardClick = (obj) => {\n    fetch(fetchJobUrl + obj.jobId)\n      .then((res) => res.json())\n      .then((res) => {\n        props.fetchJob(convertServiceToClientJob(res));\n        setPrimaryJobList(false);\n        setGreenCommuteClicked(false);\n      })\n      .catch((e) => console.log(e));\n  };\n  const onBackClick = () => {\n    setGreenCommuteClicked(false);\n  };\n\n  const greenCommuteClick = () => {\n    setGreenCommuteClicked(true);\n  };\n  return (\n    <Grid container className={classes.root} data-testid=\"landing-page\">\n      <Grid item xs={2}>\n        <Navbar />\n      </Grid>\n      <Grid item container xs={10} className={classes.right}>\n        <Grid item xs={12} className={classes.topHeader}>\n          <TopHeader\n            locationLabel={props.userLocation}\n            profileName=\"Bob Joseph\"\n          />\n        </Grid>\n        <Grid container item xs={12}>\n          <JobList\n            isPrimary={isPrimaryJobList}\n            jobs={reducerJobs}\n            placeholder1=\"Search skills\"\n            options1={props.searchOptions1}\n            icon1={<CustomWorkOutlined fontSize={\"small\"} />}\n            placeholder2=\"Location\"\n            options2={props.searchOptions2}\n            icon2={<CustomRoomOutlinedIcon fontSize={\"small\"} />}\n            onSearchCLick={handleSearch}\n            onJobCardClick={onJobCardClick}\n            skill={props.skill[0]}\n            jobLocation={finalJobLocation}\n            showFindJobs={true}\n            fetchJobs={props.fetchJobs}\n          />\n          {isPrimaryJobList ? (\n            \"\"\n          ) : isGreenCommuteClicked ? (\n            <Grid item>\n              <JobCommuteRoutes\n                selectedCommute=\"metro\"\n                {...props.draftJob}\n                from={props.userLocation}\n                to={props.jobLocation}\n                commuteTypes={props.metroOptions}\n                cabOptions={props.cabOptions}\n                onBackClick={onBackClick}\n                showFindJobs={true}\n              />\n            </Grid>\n          ) : (\n            <Grid item>\n              <JobDetails\n                onGreenCommuteClick={greenCommuteClick}\n                {...props.draftJob}\n                showFindJobs={true}\n              />\n            </Grid>\n          )}\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\nconst CustomWorkOutlined = withStyles({\n  root: {\n    color: \"#5f7381\",\n  },\n})((props) => <WorkOutlineIcon {...props} />);\n\nconst CustomRoomOutlinedIcon = withStyles({\n  root: {\n    color: \"#5f7381\",\n  },\n})((props) => <RoomOutlinedIcon {...props} />);\n\nconst mapStateToProps = (state) => {\n  return {\n    jobs: state.jobs,\n    searchOptions1: state.searchOptions1,\n    searchOptions2: state.searchOptions2,\n    jobLocation: state.jobLocation,\n    userLocation: state.userLocation,\n    skill: state.skills,\n    filters: state.filters,\n    draftJob: state.draftJob,\n    cabOptions: state.cabOptions,\n    metroOptions: state.metroOptions,\n  };\n};\n\nLandingPageDispatch();\n\nexport default connect(mapStateToProps, LandingPageDispatch)(LandingPage);"]},"metadata":{},"sourceType":"module"}