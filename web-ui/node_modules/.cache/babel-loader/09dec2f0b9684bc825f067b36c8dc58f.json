{"ast":null,"code":"var _jsxFileName = \"/home/sring/BC-15/devops-bootcamp-jan22/BC15-green-commute/web-ui/src/components/molecules/JobDetailsHeader/JobDetailsHeader.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport CompanyLogo from '../../atoms/CompanyLogo/CompanyLogo';\nimport CardLabel from '../../atoms/cardLabel/CardLabel';\nimport Button from '../../atoms/button/Button';\nimport { makeStyles, Snackbar } from \"@material-ui/core\";\nimport { apis } from '../../../utils/resources/resources';\nimport { Alert } from \"@material-ui/lab\";\nimport { headerInfo, jobSavedSuccess, jobAlreadyPresent, jobSavedFailed, failedToRemove } from '../../../utils/constants/constant';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  buttonsStyle: {\n    width: \"220px\",\n    marginTop: \"12px\"\n  },\n  columnMargin: {\n    marginLeft: \"8px\"\n  },\n  root: {\n    display: \"flex\"\n  }\n});\n\nconst JobDetailsHeader = _ref => {\n  _s();\n\n  let {\n    url,\n    alt,\n    jobId,\n    jobTitle,\n    companyName,\n    location,\n    contentDescription,\n    onClickApply,\n    isPrimary,\n    showFindJobs,\n    ...props\n  } = _ref;\n  const classes = useStyles();\n  const saveOrRemoveButton = showFindJobs ? \"Save\" : \"Remove\";\n  const [message, setMessage] = useState(\"Message\");\n  const jobsUrl = new URL(apis.GET_SAVEDJOBS + jobId);\n  const [messageType, setMessageType] = useState(\"success\");\n  const savedJobsUrl = new URL(apis.GET_SAVEDJOBS + jobId);\n  const [showMessage, setShowMessage] = useState(false);\n\n  const onClickSaveOrRemove = () => {\n    if (saveOrRemoveButton === \"Save\") {\n      fetch(jobsUrl, {\n        method: 'POST',\n        headers: {\n          \"Content-type\": headerInfo\n        }\n      }).then(res => {\n        if (res.status === 200) {\n          setMessage(jobSavedSuccess);\n          setMessageType(\"success\");\n        } else if (res.status === 409) {\n          setMessageType(\"info\");\n          setMessage(jobAlreadyPresent);\n        } else {\n          setMessage(jobSavedFailed);\n          setMessageType(\"error\");\n        }\n\n        setShowMessage(true);\n      });\n    } else {\n      fetch(savedJobsUrl, {\n        method: 'DELETE'\n      }).then(res => {\n        if (res.status === 200) {\n          props.itemsRemoved(jobId);\n        } else {\n          setMessage(failedToRemove);\n          setMessageType(\"error\");\n          setShowMessage(true);\n        }\n\n        setShowMessage(true);\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    className: classes.root,\n    \"data-testid\": \"jobDetailsHeader-placeholder\",\n    children: [/*#__PURE__*/_jsxDEV(CompanyLogo, {\n      url: url,\n      alt: alt\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      direction: \"column\",\n      className: classes.columnMargin,\n      children: [/*#__PURE__*/_jsxDEV(CardLabel, {\n        label: jobTitle,\n        isPrimary: true,\n        children: \" \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CardLabel, {\n        label: companyName,\n        children: \" \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CardLabel, {\n        label: location,\n        children: \" \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), isPrimary ? /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        justify: \"space-between\",\n        className: classes.buttonsStyle,\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          label: saveOrRemoveButton,\n          type: \"small\",\n          variant: \"outlined\",\n          onClick: onClickSaveOrRemove\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          label: \"Apply\",\n          variant: \"contained\",\n          type: \"small\",\n          onClick: onClickApply\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this) : \"\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      anchorOrigin: {\n        vertical: 'top',\n        horizontal: 'center'\n      },\n      open: showMessage,\n      autoHideDuration: 3000,\n      onClose: () => {\n        setShowMessage(false);\n      },\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        severity: messageType,\n        elevation: 6,\n        variant: \"filled\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n};\n\n_s(JobDetailsHeader, \"RnNfsghtFgAGKHGGoej3T78sSRE=\", false, function () {\n  return [useStyles];\n});\n\n_c = JobDetailsHeader;\nJobDetailsHeader.propTypes = {\n  url: PropTypes.string,\n  alt: PropTypes.string,\n  jobTitle: PropTypes.string,\n  companyName: PropTypes.string,\n  location: PropTypes.string,\n  isPrimary: PropTypes.bool\n};\nexport default JobDetailsHeader;\n\nvar _c;\n\n$RefreshReg$(_c, \"JobDetailsHeader\");","map":{"version":3,"sources":["/home/sring/BC-15/devops-bootcamp-jan22/BC15-green-commute/web-ui/src/components/molecules/JobDetailsHeader/JobDetailsHeader.js"],"names":["React","useState","PropTypes","Grid","CompanyLogo","CardLabel","Button","makeStyles","Snackbar","apis","Alert","headerInfo","jobSavedSuccess","jobAlreadyPresent","jobSavedFailed","failedToRemove","useStyles","buttonsStyle","width","marginTop","columnMargin","marginLeft","root","display","JobDetailsHeader","url","alt","jobId","jobTitle","companyName","location","contentDescription","onClickApply","isPrimary","showFindJobs","props","classes","saveOrRemoveButton","message","setMessage","jobsUrl","URL","GET_SAVEDJOBS","messageType","setMessageType","savedJobsUrl","showMessage","setShowMessage","onClickSaveOrRemove","fetch","method","headers","then","res","status","itemsRemoved","vertical","horizontal","propTypes","string","bool"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport CompanyLogo from '../../atoms/CompanyLogo/CompanyLogo';\nimport CardLabel from '../../atoms/cardLabel/CardLabel';\nimport Button from '../../atoms/button/Button';\nimport {makeStyles, Snackbar} from \"@material-ui/core\";\nimport { apis } from '../../../utils/resources/resources';\nimport {Alert} from \"@material-ui/lab\";\nimport { headerInfo, jobSavedSuccess, jobAlreadyPresent, jobSavedFailed, failedToRemove } from '../../../utils/constants/constant';\n\nconst useStyles = makeStyles({\n    buttonsStyle: {\n        width: \"220px\",\n        marginTop: \"12px\",\n    },\n    columnMargin :{\n        marginLeft:\"8px\",\n    },\n    root:{\n        display: \"flex\"\n    }\n});\n\nconst JobDetailsHeader = ({ url, alt, jobId, jobTitle, companyName, location, contentDescription, onClickApply, isPrimary, showFindJobs, ...props }) => {\n    const classes = useStyles();\n    const saveOrRemoveButton = showFindJobs ? \"Save\" : \"Remove\";\n    const [message, setMessage] = useState(\"Message\");\n    const jobsUrl = new URL(apis.GET_SAVEDJOBS + jobId);\n    const [messageType, setMessageType] = useState(\"success\");\n    const savedJobsUrl = new URL(apis.GET_SAVEDJOBS + jobId);\n    const [showMessage, setShowMessage] = useState(false);\n    const onClickSaveOrRemove = () => {\n        if(saveOrRemoveButton === \"Save\") {\n            fetch(jobsUrl, { \n                method: 'POST', \n                headers: {\n                    \"Content-type\": headerInfo\n                } \n            }) \n            .then((res) => {\n                if (res.status === 200){\n                    setMessage(jobSavedSuccess);\n                    setMessageType(\"success\");\n                } else if (res.status === 409){\n                    setMessageType(\"info\");\n                    setMessage(jobAlreadyPresent);\n                } else {\n                    setMessage(jobSavedFailed);\n                    setMessageType(\"error\");\n                }\n                setShowMessage(true);\n            });\n        }\n        else {\n            fetch(savedJobsUrl, {\n            method: 'DELETE'})\n            .then(res => {\n                if (res.status === 200){\n                    props.itemsRemoved(jobId);\n                } else {\n                    setMessage(failedToRemove);\n                    setMessageType(\"error\");\n                    setShowMessage(true);\n                }\n                setShowMessage(true);\n            });\n\n        }\n    };\n    return (\n        <Grid className={classes.root} data-testid=\"jobDetailsHeader-placeholder\">\n            <CompanyLogo url={url} alt={alt} ></CompanyLogo>\n\n            <Grid container direction=\"column\" className={classes.columnMargin}>\n                <CardLabel label={jobTitle} isPrimary> </CardLabel>\n                <CardLabel label={companyName}> </CardLabel>\n                <CardLabel label={location}> </CardLabel>\n                { isPrimary ?\n                <Grid container justify=\"space-between\" className={classes.buttonsStyle} >\n                    <Button label={saveOrRemoveButton} type=\"small\" variant=\"outlined\" onClick={onClickSaveOrRemove} />\n                    <Button label=\"Apply\" variant=\"contained\" type=\"small\" onClick={onClickApply} />\n                </Grid> :\n                \"\"\n                }\n            </Grid>\n            <Snackbar\n                anchorOrigin={{vertical: 'top', horizontal: 'center'}}\n                open={showMessage}\n                autoHideDuration={3000}\n                onClose={()=> {setShowMessage(false);}}\n            >\n                <Alert severity={messageType} elevation={6} variant=\"filled\">\n                    {message}\n                </Alert>\n            </Snackbar>\n        </Grid>\n\n    );\n};\n\nJobDetailsHeader.propTypes = {\n    url: PropTypes.string,\n    alt: PropTypes.string,\n    jobTitle: PropTypes.string,\n    companyName: PropTypes.string,\n    location: PropTypes.string,\n    isPrimary: PropTypes.bool,\n};\n\nexport default JobDetailsHeader;"]},"metadata":{},"sourceType":"module"}