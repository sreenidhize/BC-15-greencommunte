{"ast":null,"code":"import _slicedToArray from\"/home/sring/BC-15/devops-bootcamp-jan22/BC15-green-commute/web-ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from\"react\";import{makeStyles,Typography,Grid}from\"@material-ui/core\";import TransitType from\"../../molecules/TransitType/TransitType\";import CommuteRoutes from\"../../molecules/CommuteRoutes/CommuteRoutes\";import CabOptions from\"../../molecules/CabOptions/CabOptions\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var useStyles=makeStyles(function(theme){return{root:{width:\"350px\"},optionsLabel:{fontSize:\"16px\",color:\"#19293b\"},routeLabel:{paddingTop:theme.spacing(2),fontSize:\"14px\",paddingBottom:theme.spacing(2),color:\"#19293b\",fontWeight:\"normal\"},googleMapsLabel:{paddingTop:theme.spacing(4),fontSize:\"14px\"},routeDetails:{paddingTop:theme.spacing(2),fontSize:\"12px\",color:\"#19293b\"}};});var defaultCommutes=[{type:\"metro\"},{type:\"bus\"},{type:\"car\"},{type:\"bike\"}];var selectCommute=function selectCommute(type){return defaultCommutes.map(function(obj){obj.type===type?obj.selected=true:obj.selected=false;return obj;});};var CommuteOptions=function CommuteOptions(_ref){var commuteTypes=_ref.commuteTypes,cabOptions=_ref.cabOptions,selectedCommute=_ref.selectedCommute;var _useState=useState(selectedCommute),_useState2=_slicedToArray(_useState,2),commute=_useState2[0],setCommute=_useState2[1];var icons=selectCommute(commute);var classes=useStyles();var changeCommute=function changeCommute(type){setCommute(type);};return/*#__PURE__*/_jsxs(Grid,{container:true,\"data-testid\":\"commute-options\",direction:\"column\",className:classes.root,children:[/*#__PURE__*/_jsxs(Grid,{item:true,container:true,justify:\"space-between\",alignItems:\"center\",children:[/*#__PURE__*/_jsx(Typography,{variant:\"h4\",className:classes.optionsLabel,children:\"Your Options\"}),/*#__PURE__*/_jsx(CommuteRoutes,{icons:icons,primary:false,isJobCard:false,onClick:changeCommute})]}),commute!==\"car\"?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(Grid,{item:true,container:true,justify:\"space-between\",children:[/*#__PURE__*/_jsx(Typography,{variant:\"h4\",className:classes.routeLabel,children:\"Maredpally - Hitech City\"}),/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",className:classes.routeDetails,children:\"$50 \\u2022 56 mins\"})]}),/*#__PURE__*/_jsx(Grid,{item:true,children:commuteTypes.map(function(item){return/*#__PURE__*/_jsx(TransitType,{description:item.description,type:item.type,fare:item.fare,isLate:item.isLate,lateStatus:item.lateStatus,time:item.time});})}),/*#__PURE__*/_jsx(Grid,{item:true,children:/*#__PURE__*/_jsx(Typography,{variant:\"h6\",color:\"primary\",className:classes.googleMapsLabel,children:\"View in google maps\"})})]}):/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(Grid,{item:true,children:/*#__PURE__*/_jsx(CabOptions,{options:cabOptions})})})]});};export default CommuteOptions;","map":{"version":3,"sources":["/home/sring/BC-15/devops-bootcamp-jan22/BC15-green-commute/web-ui/src/components/organisms/CommuteOptions/CommuteOptions.js"],"names":["React","useState","makeStyles","Typography","Grid","TransitType","CommuteRoutes","CabOptions","useStyles","theme","root","width","optionsLabel","fontSize","color","routeLabel","paddingTop","spacing","paddingBottom","fontWeight","googleMapsLabel","routeDetails","defaultCommutes","type","selectCommute","map","obj","selected","CommuteOptions","commuteTypes","cabOptions","selectedCommute","commute","setCommute","icons","classes","changeCommute","item","description","fare","isLate","lateStatus","time"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { makeStyles, Typography, Grid } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport TransitType from \"../../molecules/TransitType/TransitType\";\nimport CommuteRoutes from \"../../molecules/CommuteRoutes/CommuteRoutes\";\nimport CabOptions from \"../../molecules/CabOptions/CabOptions\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"350px\",\n  },\n  optionsLabel: {\n    fontSize: \"16px\",\n    color: \"#19293b\",\n  },\n  routeLabel: {\n    paddingTop: theme.spacing(2),\n    fontSize: \"14px\",\n    paddingBottom: theme.spacing(2),\n    color: \"#19293b\",\n    fontWeight: \"normal\",\n  },\n  googleMapsLabel: {\n    paddingTop: theme.spacing(4),\n    fontSize: \"14px\",\n  },\n  routeDetails: {\n    paddingTop: theme.spacing(2),\n    fontSize: \"12px\",\n    color: \"#19293b\",\n  },\n}));\n\nconst defaultCommutes = [\n  { type: \"metro\" },\n  { type: \"bus\" },\n  { type: \"car\" },\n  { type: \"bike\" },\n];\n\nconst selectCommute = (type) => {\n  return defaultCommutes.map((obj) => {\n    obj.type === type ? (obj.selected = true) : (obj.selected = false);\n    return obj;\n  });\n};\n\nconst CommuteOptions = ({ commuteTypes, cabOptions, selectedCommute }) => {\n  const [commute, setCommute] = useState(selectedCommute);\n  const icons = selectCommute(commute);\n\n  const classes = useStyles();\n\n  const changeCommute = (type) => {\n    setCommute(type);\n  };\n\n  return (\n    <Grid\n      container\n      data-testid=\"commute-options\"\n      direction=\"column\"\n      className={classes.root}\n    >\n      <Grid item container justify=\"space-between\" alignItems='center'>\n        <Typography variant={\"h4\"} className={classes.optionsLabel}>\n          Your Options\n        </Typography>\n        <CommuteRoutes\n          icons={icons}\n          primary={false}\n          isJobCard={false}\n          onClick={changeCommute}\n        />\n      </Grid>\n\n      {commute !== \"car\" ? (\n        <>\n          <Grid item container justify=\"space-between\">\n            <Typography variant={\"h4\"} className={classes.routeLabel}>\n              Maredpally - Hitech City\n            </Typography>\n            <Typography variant={\"subtitle2\"} className={classes.routeDetails}>\n              $50 &bull; 56 mins\n            </Typography>\n          </Grid>\n          <Grid item>\n            {commuteTypes.map((item) => (\n              <TransitType\n                description={item.description}\n                type={item.type}\n                fare={item.fare}\n                isLate={item.isLate}\n                lateStatus={item.lateStatus}\n                time={item.time}\n              />\n            ))}\n          </Grid>\n          <Grid item>\n            <Typography\n              variant={\"h6\"}\n              color={\"primary\"}\n              className={classes.googleMapsLabel}\n            >\n              View in google maps\n            </Typography>\n          </Grid>\n        </>\n      ) : (\n        <>\n          <Grid item>\n            <CabOptions options={cabOptions} />\n          </Grid>\n        </>\n      )}\n    </Grid>\n  );\n};\n\nCommuteOptions.propTypes = {\n  commuteTypes: PropTypes.array.isRequired,\n};\n\nexport default CommuteOptions;\n"]},"metadata":{},"sourceType":"module"}