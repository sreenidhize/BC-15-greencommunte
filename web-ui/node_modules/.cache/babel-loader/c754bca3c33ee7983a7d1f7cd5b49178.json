{"ast":null,"code":"import _slicedToArray from\"/home/sring/BC-15/devops-bootcamp-jan22/BC15-green-commute/web-ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _objectSpread from\"/home/sring/BC-15/devops-bootcamp-jan22/BC15-green-commute/web-ui/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import{Grid,makeStyles,withStyles}from\"@material-ui/core\";import React,{useState,useEffect}from\"react\";import TopHeader from\"../../molecules/TopHeader/TopHeader\";import Navbar from\"../../organisms/Navbar/Navbar\";import RoomOutlinedIcon from\"@material-ui/icons/RoomOutlined\";import WorkOutlineIcon from\"@material-ui/icons/WorkOutline\";import JobList from\"../../organisms/JobList/JobList\";import{connect}from\"react-redux\";import{convertServiceToClientJobs,convertServiceToClientJob}from\"../../../state/converter/jobConverter\";import JobDetails from\"../../organisms/JobDetails/JobDetails\";import{apis}from\"../../../utils/resources/resources\";import{experienceLevel,jobType,LandingPageDispatch,landingPageLocationAndSkillParams,landingPageLocationAndSkillStr2,maxDistance}from\"../../../utils/utils/utils\";import JobCommuteRoutes from\"../../organisms/JobCommuteRoutes\";import{points}from\"../../../utils/constants/constant\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var useStyles=makeStyles(function(theme){return{root:{display:\"flex\",alignItems:\"flex-start\",overflow:\"none\"},topHeader:{marginTop:theme.spacing(4),marginBottom:theme.spacing(4)},findJobs:{marginTop:theme.spacing(10)},right:{boxSizing:\"border-box\"}};});var LandingPage=function LandingPage(props){var classes=useStyles();var reducerJobs=props.jobs;var skillsUrl=apis.GET_SKILLS;var skillsURL=new URL(skillsUrl);var handleSkill=function handleSkill(){fetch(skillsURL).then(function(res){return res.json();}).then(function(res){return props.getAllSkills(res);}).catch(function(e){return console.log(e);});};var params={};var initialJobLocation=[];var finalJobLocation=\"\";params=landingPageLocationAndSkillParams(params,initialJobLocation,finalJobLocation,props.jobLocation,props.skill,points);finalJobLocation=landingPageLocationAndSkillStr2(initialJobLocation,finalJobLocation,props.jobLocation);if(jobType(props.filters)){params=_objectSpread(_objectSpread({},params),{},{job_type:jobType(props.filters)});}if(experienceLevel(props.filters)){params=_objectSpread(_objectSpread({},params),{},{experience_level:experienceLevel(props.filters)});}if(maxDistance(props.filters)){params=_objectSpread(_objectSpread({},params),{},{distance:maxDistance(props.filters)});}if(props.skill.length){params=_objectSpread(_objectSpread({},params),{},{skill:props.skill});}params=_objectSpread(_objectSpread({},params),{},{is_green_commute:props.filters[4].checked});var fetchJobsUrl=new URL(apis.GET_JOBS);var handleSearch=function handleSearch(){Object.keys(params).forEach(function(key){return fetchJobsUrl.searchParams.append(key,params[key]);});fetch(fetchJobsUrl).then(function(res){return res.json();}).then(function(res){return props.fetchJobs(convertServiceToClientJobs(res));}).catch(function(e){return console.log(e);});};useEffect(function(){handleSearch();handleSkill();// eslint-disable-next-line react-hooks/exhaustive-deps\n},[]);var fetchJobUrl=new URL(apis.GET_JOBS);var _useState=useState(true),_useState2=_slicedToArray(_useState,2),isPrimaryJobList=_useState2[0],setPrimaryJobList=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),isGreenCommuteClicked=_useState4[0],setGreenCommuteClicked=_useState4[1];var onJobCardClick=function onJobCardClick(obj){fetch(fetchJobUrl+obj.jobId).then(function(res){return res.json();}).then(function(res){props.fetchJob(convertServiceToClientJob(res));setPrimaryJobList(false);setGreenCommuteClicked(false);}).catch(function(e){return console.log(e);});};var onBackClick=function onBackClick(){setGreenCommuteClicked(false);};var greenCommuteClick=function greenCommuteClick(){setGreenCommuteClicked(true);};return/*#__PURE__*/_jsxs(Grid,{container:true,className:classes.root,\"data-testid\":\"landing-page\",children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:2,children:/*#__PURE__*/_jsx(Navbar,{})}),/*#__PURE__*/_jsxs(Grid,{item:true,container:true,xs:10,className:classes.right,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,className:classes.topHeader,children:/*#__PURE__*/_jsx(TopHeader,{locationLabel:props.userLocation,profileName:\"Bob Joseph\"})}),/*#__PURE__*/_jsxs(Grid,{container:true,item:true,xs:12,children:[/*#__PURE__*/_jsx(JobList,{isPrimary:isPrimaryJobList,jobs:reducerJobs,placeholder1:\"Search skills\",options1:props.searchOptions1,icon1:/*#__PURE__*/_jsx(CustomWorkOutlined,{fontSize:\"small\"}),placeholder2:\"Location\",options2:props.searchOptions2,icon2:/*#__PURE__*/_jsx(CustomRoomOutlinedIcon,{fontSize:\"small\"}),onSearchCLick:handleSearch,onJobCardClick:onJobCardClick,skill:props.skill[0],jobLocation:finalJobLocation,showFindJobs:true,fetchJobs:props.fetchJobs}),isPrimaryJobList?\"\":isGreenCommuteClicked?/*#__PURE__*/_jsx(Grid,{item:true,children:/*#__PURE__*/_jsx(JobCommuteRoutes,_objectSpread(_objectSpread({selectedCommute:\"metro\"},props.draftJob),{},{from:props.userLocation,to:props.jobLocation,commuteTypes:props.metroOptions,cabOptions:props.cabOptions,onBackClick:onBackClick,showFindJobs:true}))}):/*#__PURE__*/_jsx(Grid,{item:true,children:/*#__PURE__*/_jsx(JobDetails,_objectSpread(_objectSpread({onGreenCommuteClick:greenCommuteClick},props.draftJob),{},{showFindJobs:true}))})]})]})]});};var CustomWorkOutlined=withStyles({root:{color:\"#5f7381\"}})(function(props){return/*#__PURE__*/_jsx(WorkOutlineIcon,_objectSpread({},props));});var CustomRoomOutlinedIcon=withStyles({root:{color:\"#5f7381\"}})(function(props){return/*#__PURE__*/_jsx(RoomOutlinedIcon,_objectSpread({},props));});var mapStateToProps=function mapStateToProps(state){return{jobs:state.jobs,searchOptions1:state.searchOptions1,searchOptions2:state.searchOptions2,jobLocation:state.jobLocation,userLocation:state.userLocation,skill:state.skills,filters:state.filters,draftJob:state.draftJob,cabOptions:state.cabOptions,metroOptions:state.metroOptions};};LandingPageDispatch();export default connect(mapStateToProps,LandingPageDispatch)(LandingPage);","map":{"version":3,"sources":["/home/sring/BC-15/devops-bootcamp-jan22/BC15-green-commute/web-ui/src/components/pages/LandingPage/index.js"],"names":["Grid","makeStyles","withStyles","React","useState","useEffect","TopHeader","Navbar","RoomOutlinedIcon","WorkOutlineIcon","JobList","connect","convertServiceToClientJobs","convertServiceToClientJob","JobDetails","apis","experienceLevel","jobType","LandingPageDispatch","landingPageLocationAndSkillParams","landingPageLocationAndSkillStr2","maxDistance","JobCommuteRoutes","points","useStyles","theme","root","display","alignItems","overflow","topHeader","marginTop","spacing","marginBottom","findJobs","right","boxSizing","LandingPage","props","classes","reducerJobs","jobs","skillsUrl","GET_SKILLS","skillsURL","URL","handleSkill","fetch","then","res","json","getAllSkills","catch","e","console","log","params","initialJobLocation","finalJobLocation","jobLocation","skill","filters","job_type","experience_level","distance","length","is_green_commute","checked","fetchJobsUrl","GET_JOBS","handleSearch","Object","keys","forEach","key","searchParams","append","fetchJobs","fetchJobUrl","isPrimaryJobList","setPrimaryJobList","isGreenCommuteClicked","setGreenCommuteClicked","onJobCardClick","obj","jobId","fetchJob","onBackClick","greenCommuteClick","userLocation","searchOptions1","searchOptions2","draftJob","metroOptions","cabOptions","CustomWorkOutlined","color","CustomRoomOutlinedIcon","mapStateToProps","state","skills"],"mappings":"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","sourcesContent":["import { Grid, makeStyles, withStyles } from \"@material-ui/core\";\nimport React, { useState, useEffect } from \"react\";\nimport TopHeader from \"../../molecules/TopHeader/TopHeader\";\nimport Navbar from \"../../organisms/Navbar/Navbar\";\nimport RoomOutlinedIcon from \"@material-ui/icons/RoomOutlined\";\nimport WorkOutlineIcon from \"@material-ui/icons/WorkOutline\";\nimport JobList from \"../../organisms/JobList/JobList\";\nimport { connect } from \"react-redux\";\nimport {\n  convertServiceToClientJobs,\n  convertServiceToClientJob,\n} from \"../../../state/converter/jobConverter\";\nimport JobDetails from \"../../organisms/JobDetails/JobDetails\";\nimport { apis } from \"../../../utils/resources/resources\";\nimport { experienceLevel, jobType, LandingPageDispatch, landingPageLocationAndSkillParams, landingPageLocationAndSkillStr2, maxDistance } from \"../../../utils/utils/utils\";\nimport JobCommuteRoutes from \"../../organisms/JobCommuteRoutes\";\nimport { points } from \"../../../utils/constants/constant\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    alignItems: \"flex-start\",\n    overflow: \"none\",\n  },\n  topHeader: {\n    marginTop: theme.spacing(4),\n    marginBottom: theme.spacing(4),\n  },\n  findJobs: {\n    marginTop: theme.spacing(10),\n  },\n  right: {\n    boxSizing: \"border-box\",\n  },\n}));\n\nconst LandingPage = (props) => {\n  const classes = useStyles();\n  const reducerJobs = props.jobs;\n  const skillsUrl = apis.GET_SKILLS;\n  const skillsURL = new URL(skillsUrl);\n  const handleSkill = () => {\n    fetch(skillsURL)\n      .then((res) => res.json())\n      .then((res) => props.getAllSkills(res))\n      .catch((e) => console.log(e));\n  };\n  let params = {};\n  const initialJobLocation = [];\n  let finalJobLocation = \"\";\n  params = landingPageLocationAndSkillParams(params, initialJobLocation, finalJobLocation, props.jobLocation, props.skill, points);\n  finalJobLocation = landingPageLocationAndSkillStr2(initialJobLocation, finalJobLocation, props.jobLocation);\n  if (jobType(props.filters)) {\n    params = { ...params, job_type: jobType(props.filters) };\n  }\n\n  if (experienceLevel(props.filters)) {\n    params = { ...params, experience_level: experienceLevel(props.filters) };\n  }\n  if (maxDistance(props.filters)) {\n    params = { ...params, distance: maxDistance(props.filters) };\n  }\n  if (props.skill.length) {\n    params = { ...params, skill: props.skill };\n  }\n  params = { ...params, is_green_commute: props.filters[4].checked };\n  const fetchJobsUrl = new URL(apis.GET_JOBS);\n  const handleSearch = () => {\n    Object.keys(params).forEach((key) =>\n      fetchJobsUrl.searchParams.append(key, params[key])\n    );\n    fetch(fetchJobsUrl)\n      .then((res) => res.json())\n      .then((res) => props.fetchJobs(convertServiceToClientJobs(res)))\n      .catch((e) => console.log(e));\n  };\n\n  useEffect(() => {\n    handleSearch();\n    handleSkill();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const fetchJobUrl = new URL(apis.GET_JOBS);\n  const [isPrimaryJobList, setPrimaryJobList] = useState(true);\n  const [isGreenCommuteClicked, setGreenCommuteClicked] = useState(false);\n  const onJobCardClick = (obj) => {\n    fetch(fetchJobUrl + obj.jobId)\n      .then((res) => res.json())\n      .then((res) => {\n        props.fetchJob(convertServiceToClientJob(res));\n        setPrimaryJobList(false);\n        setGreenCommuteClicked(false);\n      })\n      .catch((e) => console.log(e));\n  };\n  const onBackClick = () => {\n    setGreenCommuteClicked(false);\n  };\n\n  const greenCommuteClick = () => {\n    setGreenCommuteClicked(true);\n  };\n  return (\n    <Grid container className={classes.root} data-testid=\"landing-page\">\n      <Grid item xs={2}>\n        <Navbar />\n      </Grid>\n      <Grid item container xs={10} className={classes.right}>\n        <Grid item xs={12} className={classes.topHeader}>\n          <TopHeader\n            locationLabel={props.userLocation}\n            profileName=\"Bob Joseph\"\n          />\n        </Grid>\n        <Grid container item xs={12}>\n          <JobList\n            isPrimary={isPrimaryJobList}\n            jobs={reducerJobs}\n            placeholder1=\"Search skills\"\n            options1={props.searchOptions1}\n            icon1={<CustomWorkOutlined fontSize={\"small\"} />}\n            placeholder2=\"Location\"\n            options2={props.searchOptions2}\n            icon2={<CustomRoomOutlinedIcon fontSize={\"small\"} />}\n            onSearchCLick={handleSearch}\n            onJobCardClick={onJobCardClick}\n            skill={props.skill[0]}\n            jobLocation={finalJobLocation}\n            showFindJobs={true}\n            fetchJobs={props.fetchJobs}\n          />\n          {isPrimaryJobList ? (\n            \"\"\n          ) : isGreenCommuteClicked ? (\n            <Grid item>\n              <JobCommuteRoutes\n                selectedCommute=\"metro\"\n                {...props.draftJob}\n                from={props.userLocation}\n                to={props.jobLocation}\n                commuteTypes={props.metroOptions}\n                cabOptions={props.cabOptions}\n                onBackClick={onBackClick}\n                showFindJobs={true}\n              />\n            </Grid>\n          ) : (\n            <Grid item>\n              <JobDetails\n                onGreenCommuteClick={greenCommuteClick}\n                {...props.draftJob}\n                showFindJobs={true}\n              />\n            </Grid>\n          )}\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\nconst CustomWorkOutlined = withStyles({\n  root: {\n    color: \"#5f7381\",\n  },\n})((props) => <WorkOutlineIcon {...props} />);\n\nconst CustomRoomOutlinedIcon = withStyles({\n  root: {\n    color: \"#5f7381\",\n  },\n})((props) => <RoomOutlinedIcon {...props} />);\n\nconst mapStateToProps = (state) => {\n  return {\n    jobs: state.jobs,\n    searchOptions1: state.searchOptions1,\n    searchOptions2: state.searchOptions2,\n    jobLocation: state.jobLocation,\n    userLocation: state.userLocation,\n    skill: state.skills,\n    filters: state.filters,\n    draftJob: state.draftJob,\n    cabOptions: state.cabOptions,\n    metroOptions: state.metroOptions,\n  };\n};\n\nLandingPageDispatch();\n\nexport default connect(mapStateToProps, LandingPageDispatch)(LandingPage);"]},"metadata":{},"sourceType":"module"}