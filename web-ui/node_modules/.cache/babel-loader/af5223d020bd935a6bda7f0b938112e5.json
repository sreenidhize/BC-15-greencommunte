{"ast":null,"code":"var _jsxFileName = \"/home/sring/BC-15/devops-bootcamp-jan22/BC15-green-commute/web-ui/src/components/organisms/FilterGroup/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { Grid } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core\";\nimport Paper from \"@material-ui/core/Paper\";\nimport FilterType from \"../FilterType\";\nimport Button from \"../../atoms/button/Button\";\nimport { connect } from \"react-redux\";\nimport { chipAndFilterGroupDispatch, getFilterGroupChecked, getFilterGroupClearAll, landingPageLocationAndSkillParams } from \"../../../utils/utils/utils\";\nimport { apis } from \"../../../utils/resources/resources\";\nimport { convertServiceToClientJobs } from \"../../../state/converter/jobConverter\";\nimport { points } from \"../../../utils/constants/constant\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  closeIcon: {\n    color: theme.palette.secondary.main,\n    textAlign: \"right\",\n    paddingTop: 10,\n    paddingRight: 10,\n    marginBottom: -10\n  },\n  filterType: {\n    marginBottom: 40\n  },\n  closeIconSize: {\n    fontSize: 20,\n    marginRight: -20\n  },\n  paperStyle: {\n    width: 580,\n    borderRadius: 10,\n    border: \"none\"\n  },\n  filterTypes: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    paddingLeft: 50\n  },\n  buttons: {\n    marginLeft: -35,\n    marginBottom: 20\n  }\n}));\n\nconst FilterGroup = props => {\n  _s();\n\n  const {\n    filterValues\n  } = props;\n  const classes = useStyles();\n  const [filters, setFilters] = useState(props.Filters);\n\n  const handleChange = (checkValue, label) => {\n    const jobFilters = [...filters];\n    const arrayOfJobFilters = getFilterGroupChecked(jobFilters, label);\n    setFilters(arrayOfJobFilters);\n  };\n\n  const clearAllFilters = () => {\n    const jobFilters = [...filters];\n    const arrayOfJobFilters = getFilterGroupClearAll(jobFilters);\n    setFilters(arrayOfJobFilters);\n  };\n\n  const FilterTypes = filterValues.map(input => {\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 4,\n      className: classes.filterType,\n      children: /*#__PURE__*/_jsxDEV(FilterType, {\n        heading: input.heading,\n        labels: input.labels,\n        handleChange: handleChange,\n        filters: props.Filters\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this);\n  });\n\n  const maxDistance = () => {\n    let distArray = [];\n\n    for (let i = 0; i < 4; i++) {\n      if (props.Filters[i].checked) {\n        distArray = props.Filters[i].label.split(\"-\");\n      }\n    }\n\n    return (10 + Number(distArray[0])) * 1000;\n  };\n\n  const jobType = () => {\n    let distArray = \"\";\n\n    for (let i = 9; i <= 12; i++) {\n      if (props.Filters[i].checked) {\n        distArray = props.Filters[i].label;\n      }\n    }\n\n    distArray = distArray.replace(\" \", \"_\");\n    return distArray.toUpperCase();\n  };\n\n  const experienceLevel = () => {\n    let distArray = \"\";\n\n    for (let i = 13; i <= 16; i++) {\n      if (props.Filters[i].checked) {\n        distArray = props.Filters[i].label;\n      }\n    }\n\n    distArray = distArray.replace(\"-\", \"_\");\n    return distArray.toUpperCase();\n  };\n\n  let params = {};\n  const initialJobLocation = [];\n  const finalJobLocation = \"\";\n  const parameters = landingPageLocationAndSkillParams(params, initialJobLocation, finalJobLocation, props.jobLocation, props.skill, points);\n  params = { ...parameters\n  };\n\n  if (maxDistance()) {\n    params = { ...params,\n      distance: maxDistance()\n    };\n  }\n\n  if (jobType()) {\n    params = { ...params,\n      job_type: jobType()\n    };\n  }\n\n  if (experienceLevel()) {\n    params = { ...params,\n      experience_level: experienceLevel()\n    };\n  }\n\n  const fetchJobsUrl = new URL(apis.GET_JOBS);\n\n  const handleSearch = () => {\n    Object.keys(params).forEach(key => fetchJobsUrl.searchParams.append(key, params[key]));\n    fetch(fetchJobsUrl).then(res => res.json()).then(res => props.fetchJobs(convertServiceToClientJobs(res))).catch(e => console.log(e));\n  };\n\n  const ApplyFilter = () => {\n    props.getFilters(filters);\n    props.handleClose();\n    params.lon ? params = { ...params,\n      lon: params.lon,\n      lat: params.lat,\n      is_green_commute: props.filters[4].checked\n    } : params = { ...params,\n      is_green_commute: props.filters[4].checked\n    };\n    props.skill[0] ? params = { ...params,\n      skill: props.skill[0],\n      is_green_commute: props.filters[4].checked\n    } : params = { ...params,\n      is_green_commute: props.filters[4].checked\n    };\n    handleSearch();\n  };\n\n  const ClearFilter = () => {\n    clearAllFilters();\n    props.handleClose();\n    props.getFilters(filters);\n    params.lon ? params = {\n      lon: params.lon,\n      lat: params.lat,\n      is_green_commute: false\n    } : params = {\n      is_green_commute: false\n    };\n    props.skill[0] ? params = { ...params,\n      skill: props.skill[0],\n      is_green_commute: false\n    } : params = { ...params,\n      is_green_commute: false\n    };\n    handleSearch();\n  };\n\n  useEffect(() => {\n    handleSearch(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    variant: \"outlined\",\n    className: classes.paperStyle,\n    \"data-testid\": \"filter-group\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.closeIcon,\n      children: /*#__PURE__*/_jsxDEV(CloseIcon, {\n        className: classes.closeIconSize,\n        onClick: props.handleListItemClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      className: classes.filterTypes,\n      direction: \"row\",\n      spacing: 4,\n      children: FilterTypes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      justify: \"flex-end\",\n      spacing: 3,\n      className: classes.buttons,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          label: \"Clear all\",\n          type: \"small\",\n          onClick: ClearFilter\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          label: \"Apply\",\n          onClick: ApplyFilter,\n          type: \"small\",\n          variant: \"contained\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 179,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FilterGroup, \"zrR/LCS5uTPTrvlabdSgthwhHtw=\", false, function () {\n  return [useStyles];\n});\n\n_c = FilterGroup;\n\nconst mapStateToProps = state => {\n  return {\n    Filters: state.filters,\n    jobLocation: state.jobLocation,\n    userLocation: state.userLocation,\n    skill: state.skills,\n    filters: state.filters,\n    draftJob: state.draftJob,\n    cabOptions: state.cabOptions,\n    metroOptions: state.metroOptions\n  };\n};\n\nchipAndFilterGroupDispatch();\nexport default connect(mapStateToProps, chipAndFilterGroupDispatch)(FilterGroup);\n\nvar _c;\n\n$RefreshReg$(_c, \"FilterGroup\");","map":{"version":3,"sources":["/home/sring/BC-15/devops-bootcamp-jan22/BC15-green-commute/web-ui/src/components/organisms/FilterGroup/index.js"],"names":["React","useState","useEffect","CloseIcon","Grid","makeStyles","Paper","FilterType","Button","connect","chipAndFilterGroupDispatch","getFilterGroupChecked","getFilterGroupClearAll","landingPageLocationAndSkillParams","apis","convertServiceToClientJobs","points","useStyles","theme","closeIcon","color","palette","secondary","main","textAlign","paddingTop","paddingRight","marginBottom","filterType","closeIconSize","fontSize","marginRight","paperStyle","width","borderRadius","border","filterTypes","display","flexWrap","paddingLeft","buttons","marginLeft","FilterGroup","props","filterValues","classes","filters","setFilters","Filters","handleChange","checkValue","label","jobFilters","arrayOfJobFilters","clearAllFilters","FilterTypes","map","input","heading","labels","maxDistance","distArray","i","checked","split","Number","jobType","replace","toUpperCase","experienceLevel","params","initialJobLocation","finalJobLocation","parameters","jobLocation","skill","distance","job_type","experience_level","fetchJobsUrl","URL","GET_JOBS","handleSearch","Object","keys","forEach","key","searchParams","append","fetch","then","res","json","fetchJobs","catch","e","console","log","ApplyFilter","getFilters","handleClose","lon","lat","is_green_commute","ClearFilter","handleListItemClick","mapStateToProps","state","userLocation","skills","draftJob","cabOptions","metroOptions"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { Grid } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core\";\nimport Paper from \"@material-ui/core/Paper\";\nimport FilterType from \"../FilterType\";\nimport Button from \"../../atoms/button/Button\";\nimport { connect } from \"react-redux\";\nimport {\n  chipAndFilterGroupDispatch,\n  getFilterGroupChecked,\n  getFilterGroupClearAll,\n  landingPageLocationAndSkillParams,\n} from \"../../../utils/utils/utils\";\nimport { apis } from \"../../../utils/resources/resources\";\nimport { convertServiceToClientJobs } from \"../../../state/converter/jobConverter\";\nimport { points } from \"../../../utils/constants/constant\";\n\nconst useStyles = makeStyles((theme) => ({\n  closeIcon: {\n    color: theme.palette.secondary.main,\n    textAlign: \"right\",\n    paddingTop: 10,\n    paddingRight: 10,\n    marginBottom: -10,\n  },\n  filterType: {\n    marginBottom: 40,\n  },\n  closeIconSize: {\n    fontSize: 20,\n    marginRight: -20,\n  },\n  paperStyle: {\n    width: 580,\n    borderRadius: 10,\n    border: \"none\",\n  },\n  filterTypes: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    paddingLeft: 50,\n  },\n  buttons: {\n    marginLeft: -35,\n    marginBottom: 20,\n  },\n}));\n\nconst FilterGroup = (props) => {\n  const { filterValues } = props;\n  const classes = useStyles();\n  const [filters, setFilters] = useState(props.Filters);\n  const handleChange = (checkValue, label) => {\n    const jobFilters = [...filters];\n    const arrayOfJobFilters = getFilterGroupChecked(jobFilters, label);\n    setFilters(arrayOfJobFilters);\n  };\n\n  const clearAllFilters = () => {\n    const jobFilters = [...filters];\n    const arrayOfJobFilters = getFilterGroupClearAll(jobFilters);\n    setFilters(arrayOfJobFilters);\n  };\n\n  const FilterTypes = filterValues.map((input) => {\n    return (\n      <Grid item xs={4} className={classes.filterType}>\n        <FilterType\n          heading={input.heading}\n          labels={input.labels}\n          handleChange={handleChange}\n          filters={props.Filters}\n        />\n      </Grid>\n    );\n  });\n  const maxDistance = () => {\n    let distArray = [];\n    for (let i = 0; i < 4; i++) {\n      if (props.Filters[i].checked) {\n        distArray = props.Filters[i].label.split(\"-\");\n      }\n    }\n    return (10 + Number(distArray[0])) * 1000;\n  };\n  const jobType = () => {\n    let distArray = \"\";\n    for (let i = 9; i <= 12; i++) {\n      if (props.Filters[i].checked) {\n        distArray = props.Filters[i].label;\n      }\n    }\n    distArray = distArray.replace(\" \", \"_\");\n    return distArray.toUpperCase();\n  };\n  const experienceLevel = () => {\n    let distArray = \"\";\n    for (let i = 13; i <= 16; i++) {\n      if (props.Filters[i].checked) {\n        distArray = props.Filters[i].label;\n      }\n    }\n    distArray = distArray.replace(\"-\", \"_\");\n    return distArray.toUpperCase();\n  };\n  let params = {};\n  const initialJobLocation = [];\n  const finalJobLocation = \"\";\n  const parameters = landingPageLocationAndSkillParams(\n    params,\n    initialJobLocation,\n    finalJobLocation,\n    props.jobLocation,\n    props.skill,\n    points\n  );\n  params = {...parameters};\n  if (maxDistance()) {\n    params = { ...params, distance: maxDistance() };\n  }\n  if (jobType()) {\n    params = { ...params, job_type: jobType() };\n  }\n\n  if (experienceLevel()) {\n    params = { ...params, experience_level: experienceLevel() };\n  }\n  const fetchJobsUrl = new URL(apis.GET_JOBS);\n  const handleSearch = () => {\n    Object.keys(params).forEach((key) =>\n      fetchJobsUrl.searchParams.append(key, params[key])\n    );\n    fetch(fetchJobsUrl)\n      .then((res) => res.json())\n      .then((res) => props.fetchJobs(convertServiceToClientJobs(res)))\n      .catch((e) => console.log(e));\n  };\n\n  const ApplyFilter = () => {\n    props.getFilters(filters);\n    props.handleClose();\n    params.lon\n      ? (params = {\n          ...params,\n          lon: params.lon,\n          lat: params.lat,\n          is_green_commute: props.filters[4].checked,\n        })\n      : (params = { ...params, is_green_commute: props.filters[4].checked });\n    props.skill[0]\n      ? (params = {\n          ...params,\n          skill: props.skill[0],\n          is_green_commute: props.filters[4].checked,\n        })\n      : (params = { ...params, is_green_commute: props.filters[4].checked });\n    handleSearch();\n  };\n\n  const ClearFilter = () => {\n    clearAllFilters();\n    props.handleClose();\n    props.getFilters(filters);\n    params.lon\n      ? (params = { lon: params.lon, lat: params.lat, is_green_commute: false })\n      : (params = { is_green_commute: false });\n      props.skill[0]\n      ? (params = { ...params, skill: props.skill[0], is_green_commute: false })\n      : (params = { ...params, is_green_commute: false });\n    handleSearch();\n  };\n\n  useEffect(() => {\n    handleSearch();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return (\n    <Paper\n      variant=\"outlined\"\n      className={classes.paperStyle}\n      data-testid=\"filter-group\"\n    >\n      <div className={classes.closeIcon}>\n        <CloseIcon\n          className={classes.closeIconSize}\n          onClick={props.handleListItemClick}\n        ></CloseIcon>\n      </div>\n      <Grid\n        container\n        className={classes.filterTypes}\n        direction=\"row\"\n        spacing={4}\n      >\n        {FilterTypes}\n      </Grid>\n      <Grid\n        container\n        justify=\"flex-end\"\n        spacing={3}\n        className={classes.buttons}\n      >\n        <Grid item>\n          <Button label=\"Clear all\" type=\"small\" onClick={ClearFilter}></Button>\n        </Grid>\n        <Grid item>\n          <Button\n            label=\"Apply\"\n            onClick={ApplyFilter}\n            type=\"small\"\n            variant=\"contained\"\n          ></Button>\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    Filters: state.filters,\n    jobLocation: state.jobLocation,\n    userLocation: state.userLocation,\n    skill: state.skills,\n    filters: state.filters,\n    draftJob: state.draftJob,\n    cabOptions: state.cabOptions,\n    metroOptions: state.metroOptions,\n  };\n};\n\nchipAndFilterGroupDispatch();\n\nexport default connect(\n  mapStateToProps,\n  chipAndFilterGroupDispatch\n)(FilterGroup);\n"]},"metadata":{},"sourceType":"module"}