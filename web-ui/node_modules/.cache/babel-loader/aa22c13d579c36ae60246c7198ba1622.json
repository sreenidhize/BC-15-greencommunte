{"ast":null,"code":"import _objectSpread from\"/home/sring/BC-15/devops-bootcamp-jan22/BC15-green-commute/web-ui/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import{jobLocation as _jobLocation,jobSkill,userLocation as _userLocation,getFilters as _getFilters,fetchSavedJobs as _fetchSavedJobs,fetchJob as _fetchJob,fetchJobs as _fetchJobs,getAllSkills as _getAllSkills}from\"../../state/action/action\";export var getRandomInt=function getRandomInt(min,max){return Math.floor(Math.random()*(Math.floor(max)-Math.ceil(min))+Math.ceil(min));};export var StepPageDispatch=function StepPageDispatch(dispatch){return{jobLocation:function jobLocation(data){return dispatch(_jobLocation(data));},userLocation:function userLocation(data){return dispatch(_userLocation(data));},skills:function skills(data){return dispatch(jobSkill(data));}};};export var chipAndFilterGroupDispatch=function chipAndFilterGroupDispatch(dispatch){return{getFilters:function getFilters(data){return dispatch(_getFilters(data));}};};export var maxDistance=function maxDistance(filters){var distArray=[];for(var i=0;i<4;i++){if(filters[i].checked){distArray=filters[i].label.split(\"-\");}}return(10+Number(distArray[0]))*1000;};export var jobType=function jobType(filters){var distArray=\"\";for(var i=9;i<=12;i++){if(filters[i].checked){distArray=filters[i].label;}}distArray=distArray.replace(\" \",\"_\");return distArray.toUpperCase();};export var experienceLevel=function experienceLevel(filters){var distArray=\"\";for(var i=13;i<=16;i++){if(filters[i].checked){distArray=filters[i].label;}}distArray=distArray.replace(\"-\",\"_\");return distArray.toUpperCase();};export var getFilterGroupChecked=function getFilterGroupChecked(objectArray,text){for(var i=0;i<objectArray.length;i++){if(objectArray[i].label===text){objectArray[i].checked=!objectArray[i].checked;}}return objectArray;};export var getFilterGroupClearAll=function getFilterGroupClearAll(objectArray){for(var i=0;i<objectArray.length;i++){objectArray[i].checked=false;}return objectArray;};export var SavedJobsDispatch=function SavedJobsDispatch(dispatch){return{fetchSavedJobs:function fetchSavedJobs(data){return dispatch(_fetchSavedJobs(data));},fetchJob:function fetchJob(data){return dispatch(_fetchJob(data));}};};export var LandingPageDispatch=function LandingPageDispatch(dispatch){return{fetchJobs:function fetchJobs(data){return dispatch(_fetchJobs(data));},fetchJob:function fetchJob(data){return dispatch(_fetchJob(data));},getAllSkills:function getAllSkills(data){return dispatch(_getAllSkills(data));}};};export var FindJobDispatch=function FindJobDispatch(dispatch){return{location:function location(data){return dispatch(_jobLocation(data));},skills:function skills(data){return dispatch(jobSkill(data));}};};export var StepDispatch=function StepDispatch(dispatch){return{getAllSkills:function getAllSkills(data){return dispatch(_getAllSkills(data));}};};export var landingPageLocationAndSkillParams=function landingPageLocationAndSkillParams(params,initialJobLocation,finalJobLocation,jobLocation,skill,points){if(jobLocation!==null){if(jobLocation.length!==0){var selectedLocation=points[jobLocation.split(\",\")[0]];return _objectSpread(_objectSpread({},params),{},{lon:selectedLocation[0],lat:selectedLocation[1]});}}else{return{};}};export var landingPageLocationAndSkillStr2=function landingPageLocationAndSkillStr2(initialJobLocation,finalJobLocation,jobLocation){if(jobLocation!==null){if(jobLocation.length!==0){return jobLocation.split(\",\")[0];}return\"\";}return\"\";};","map":{"version":3,"sources":["/home/sring/BC-15/devops-bootcamp-jan22/BC15-green-commute/web-ui/src/utils/utils/utils.js"],"names":["jobLocation","jobSkill","userLocation","getFilters","fetchSavedJobs","fetchJob","fetchJobs","getAllSkills","getRandomInt","min","max","Math","floor","random","ceil","StepPageDispatch","dispatch","data","skills","chipAndFilterGroupDispatch","maxDistance","filters","distArray","i","checked","label","split","Number","jobType","replace","toUpperCase","experienceLevel","getFilterGroupChecked","objectArray","text","length","getFilterGroupClearAll","SavedJobsDispatch","LandingPageDispatch","FindJobDispatch","location","StepDispatch","landingPageLocationAndSkillParams","params","initialJobLocation","finalJobLocation","skill","points","selectedLocation","lon","lat","landingPageLocationAndSkillStr2"],"mappings":"sJAAA,OACEA,WAAW,GAAXA,CAAAA,YADF,CAEEC,QAFF,CAGEC,YAAY,GAAZA,CAAAA,aAHF,CAIEC,UAAU,GAAVA,CAAAA,WAJF,CAKEC,cAAc,GAAdA,CAAAA,eALF,CAMEC,QAAQ,GAARA,CAAAA,SANF,CAOEC,SAAS,GAATA,CAAAA,UAPF,CAQEC,YAAY,GAAZA,CAAAA,aARF,KASO,2BATP,CAWA,MAAO,IAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,GAAD,CAAMC,GAAN,CAAc,CACxC,MAAOC,CAAAA,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,IAAiBF,IAAI,CAACC,KAAL,CAAWF,GAAX,EAAkBC,IAAI,CAACG,IAAL,CAAUL,GAAV,CAAnC,EAAqDE,IAAI,CAACG,IAAL,CAAUL,GAAV,CAAhE,CAAP,CACD,CAFM,CAIP,MAAO,IAAMM,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACC,QAAD,CAAc,CAC5C,MAAO,CACLhB,WAAW,CAAE,qBAACiB,IAAD,QAAUD,CAAAA,QAAQ,CAAChB,YAAW,CAACiB,IAAD,CAAZ,CAAlB,EADR,CAELf,YAAY,CAAE,sBAACe,IAAD,QAAUD,CAAAA,QAAQ,CAACd,aAAY,CAACe,IAAD,CAAb,CAAlB,EAFT,CAGLC,MAAM,CAAE,gBAACD,IAAD,QAAUD,CAAAA,QAAQ,CAACf,QAAQ,CAACgB,IAAD,CAAT,CAAlB,EAHH,CAAP,CAKD,CANM,CAQP,MAAO,IAAME,CAAAA,0BAA0B,CAAG,QAA7BA,CAAAA,0BAA6B,CAACH,QAAD,CAAc,CACtD,MAAO,CACLb,UAAU,CAAE,oBAACc,IAAD,QAAUD,CAAAA,QAAQ,CAACb,WAAU,CAACc,IAAD,CAAX,CAAlB,EADP,CAAP,CAGD,CAJM,CAMP,MAAO,IAAMG,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,OAAD,CAAa,CACtC,GAAIC,CAAAA,SAAS,CAAG,EAAhB,CACA,IAAK,GAAIC,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAG,CAApB,CAAuBA,CAAC,EAAxB,CAA4B,CAC1B,GAAIF,OAAO,CAACE,CAAD,CAAP,CAAWC,OAAf,CAAwB,CACtBF,SAAS,CAAGD,OAAO,CAACE,CAAD,CAAP,CAAWE,KAAX,CAAiBC,KAAjB,CAAuB,GAAvB,CAAZ,CACD,CACF,CACD,MAAO,CAAC,GAAKC,MAAM,CAACL,SAAS,CAAC,CAAD,CAAV,CAAZ,EAA8B,IAArC,CACD,CARM,CAUP,MAAO,IAAMM,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACP,OAAD,CAAa,CAClC,GAAIC,CAAAA,SAAS,CAAG,EAAhB,CACA,IAAK,GAAIC,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,EAAI,EAArB,CAAyBA,CAAC,EAA1B,CAA8B,CAC5B,GAAIF,OAAO,CAACE,CAAD,CAAP,CAAWC,OAAf,CAAwB,CACtBF,SAAS,CAAGD,OAAO,CAACE,CAAD,CAAP,CAAWE,KAAvB,CACD,CACF,CACDH,SAAS,CAAGA,SAAS,CAACO,OAAV,CAAkB,GAAlB,CAAuB,GAAvB,CAAZ,CACA,MAAOP,CAAAA,SAAS,CAACQ,WAAV,EAAP,CACD,CATM,CAWP,MAAO,IAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACV,OAAD,CAAa,CAC1C,GAAIC,CAAAA,SAAS,CAAG,EAAhB,CACA,IAAK,GAAIC,CAAAA,CAAC,CAAG,EAAb,CAAiBA,CAAC,EAAI,EAAtB,CAA0BA,CAAC,EAA3B,CAA+B,CAC7B,GAAIF,OAAO,CAACE,CAAD,CAAP,CAAWC,OAAf,CAAwB,CACtBF,SAAS,CAAGD,OAAO,CAACE,CAAD,CAAP,CAAWE,KAAvB,CACD,CACF,CACDH,SAAS,CAAGA,SAAS,CAACO,OAAV,CAAkB,GAAlB,CAAuB,GAAvB,CAAZ,CACA,MAAOP,CAAAA,SAAS,CAACQ,WAAV,EAAP,CACD,CATM,CAWP,MAAO,IAAME,CAAAA,qBAAqB,CAAG,QAAxBA,CAAAA,qBAAwB,CAACC,WAAD,CAAcC,IAAd,CAAuB,CAC1D,IAAK,GAAIX,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGU,WAAW,CAACE,MAAhC,CAAwCZ,CAAC,EAAzC,CAA6C,CAC3C,GAAIU,WAAW,CAACV,CAAD,CAAX,CAAeE,KAAf,GAAyBS,IAA7B,CAAmC,CACjCD,WAAW,CAACV,CAAD,CAAX,CAAeC,OAAf,CAAyB,CAACS,WAAW,CAACV,CAAD,CAAX,CAAeC,OAAzC,CACD,CACF,CACD,MAAOS,CAAAA,WAAP,CACD,CAPM,CAQP,MAAO,IAAMG,CAAAA,sBAAsB,CAAG,QAAzBA,CAAAA,sBAAyB,CAACH,WAAD,CAAiB,CACrD,IAAK,GAAIV,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGU,WAAW,CAACE,MAAhC,CAAwCZ,CAAC,EAAzC,CAA6C,CAC3CU,WAAW,CAACV,CAAD,CAAX,CAAeC,OAAf,CAAyB,KAAzB,CACD,CACD,MAAOS,CAAAA,WAAP,CACD,CALM,CAOP,MAAO,IAAMI,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAACrB,QAAD,CAAc,CAC7C,MAAO,CACLZ,cAAc,CAAE,wBAACa,IAAD,QAAUD,CAAAA,QAAQ,CAACZ,eAAc,CAACa,IAAD,CAAf,CAAlB,EADX,CAELZ,QAAQ,CAAE,kBAACY,IAAD,QAAUD,CAAAA,QAAQ,CAACX,SAAQ,CAACY,IAAD,CAAT,CAAlB,EAFL,CAAP,CAID,CALM,CAOP,MAAO,IAAMqB,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,CAACtB,QAAD,CAAc,CAC/C,MAAO,CACLV,SAAS,CAAE,mBAACW,IAAD,QAAUD,CAAAA,QAAQ,CAACV,UAAS,CAACW,IAAD,CAAV,CAAlB,EADN,CAELZ,QAAQ,CAAE,kBAACY,IAAD,QAAUD,CAAAA,QAAQ,CAACX,SAAQ,CAACY,IAAD,CAAT,CAAlB,EAFL,CAGLV,YAAY,CAAE,sBAACU,IAAD,QAAUD,CAAAA,QAAQ,CAACT,aAAY,CAACU,IAAD,CAAb,CAAlB,EAHT,CAAP,CAKD,CANM,CAQP,MAAO,IAAMsB,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACvB,QAAD,CAAc,CAC3C,MAAO,CACLwB,QAAQ,CAAE,kBAACvB,IAAD,QAAUD,CAAAA,QAAQ,CAAChB,YAAW,CAACiB,IAAD,CAAZ,CAAlB,EADL,CAELC,MAAM,CAAE,gBAACD,IAAD,QAAUD,CAAAA,QAAQ,CAACf,QAAQ,CAACgB,IAAD,CAAT,CAAlB,EAFH,CAAP,CAID,CALM,CAOP,MAAO,IAAMwB,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACzB,QAAD,CAAc,CACxC,MAAO,CACLT,YAAY,CAAE,sBAACU,IAAD,QAAUD,CAAAA,QAAQ,CAACT,aAAY,CAACU,IAAD,CAAb,CAAlB,EADT,CAAP,CAGD,CAJM,CAOP,MAAO,IAAMyB,CAAAA,iCAAiC,CAAG,QAApCA,CAAAA,iCAAoC,CAC/CC,MAD+C,CAE/CC,kBAF+C,CAG/CC,gBAH+C,CAI/C7C,WAJ+C,CAK/C8C,KAL+C,CAM/CC,MAN+C,CAO5C,CACH,GAAI/C,WAAW,GAAK,IAApB,CAA0B,CACxB,GAAIA,WAAW,CAACmC,MAAZ,GAAuB,CAA3B,CAA8B,CAC5B,GAAMa,CAAAA,gBAAgB,CAAGD,MAAM,CAAC/C,WAAW,CAAC0B,KAAZ,CAAkB,GAAlB,EAAuB,CAAvB,CAAD,CAA/B,CACE,sCACKiB,MADL,MAEEM,GAAG,CAAED,gBAAgB,CAAC,CAAD,CAFvB,CAGEE,GAAG,CAAEF,gBAAgB,CAAC,CAAD,CAHvB,GAKH,CACF,CATD,IASO,CACL,MAAO,EAAP,CACD,CACF,CApBM,CAsBP,MAAO,IAAMG,CAAAA,+BAA+B,CAAG,QAAlCA,CAAAA,+BAAkC,CAC7CP,kBAD6C,CAE7CC,gBAF6C,CAG7C7C,WAH6C,CAI1C,CACH,GAAIA,WAAW,GAAK,IAApB,CAA0B,CACxB,GAAIA,WAAW,CAACmC,MAAZ,GAAuB,CAA3B,CAA8B,CAC5B,MAAOnC,CAAAA,WAAW,CAAC0B,KAAZ,CAAkB,GAAlB,EAAuB,CAAvB,CAAP,CACD,CACD,MAAO,EAAP,CACD,CACD,MAAO,EAAP,CACD,CAZM","sourcesContent":["import {\n  jobLocation,\n  jobSkill,\n  userLocation,\n  getFilters,\n  fetchSavedJobs,\n  fetchJob,\n  fetchJobs,\n  getAllSkills,\n} from \"../../state/action/action\";\n\nexport const getRandomInt = (min, max) => {\n  return Math.floor(Math.random() * (Math.floor(max) - Math.ceil(min)) + Math.ceil(min));\n};\n\nexport const StepPageDispatch = (dispatch) => {\n  return {\n    jobLocation: (data) => dispatch(jobLocation(data)),\n    userLocation: (data) => dispatch(userLocation(data)),\n    skills: (data) => dispatch(jobSkill(data)),\n  };\n};\n\nexport const chipAndFilterGroupDispatch = (dispatch) => {\n  return {\n    getFilters: (data) => dispatch(getFilters(data)),\n  };\n};\n\nexport const maxDistance = (filters) => {\n  let distArray = [];\n  for (let i = 0; i < 4; i++) {\n    if (filters[i].checked) {\n      distArray = filters[i].label.split(\"-\");\n    }\n  }\n  return (10 + Number(distArray[0])) * 1000;\n};\n\nexport const jobType = (filters) => {\n  let distArray = \"\";\n  for (let i = 9; i <= 12; i++) {\n    if (filters[i].checked) {\n      distArray = filters[i].label;\n    }\n  }\n  distArray = distArray.replace(\" \", \"_\");\n  return distArray.toUpperCase();\n};\n\nexport const experienceLevel = (filters) => {\n  let distArray = \"\";\n  for (let i = 13; i <= 16; i++) {\n    if (filters[i].checked) {\n      distArray = filters[i].label;\n    }\n  }\n  distArray = distArray.replace(\"-\", \"_\");\n  return distArray.toUpperCase();\n};\n\nexport const getFilterGroupChecked = (objectArray, text) => {\n  for (let i = 0; i < objectArray.length; i++) {\n    if (objectArray[i].label === text) {\n      objectArray[i].checked = !objectArray[i].checked;\n    }\n  }\n  return objectArray;\n};\nexport const getFilterGroupClearAll = (objectArray) => {\n  for (let i = 0; i < objectArray.length; i++) {\n    objectArray[i].checked = false;\n  }\n  return objectArray;\n};\n\nexport const SavedJobsDispatch = (dispatch) => {\n  return {\n    fetchSavedJobs: (data) => dispatch(fetchSavedJobs(data)),\n    fetchJob: (data) => dispatch(fetchJob(data)),\n  };\n};\n\nexport const LandingPageDispatch = (dispatch) => {\n  return {\n    fetchJobs: (data) => dispatch(fetchJobs(data)),\n    fetchJob: (data) => dispatch(fetchJob(data)),\n    getAllSkills: (data) => dispatch(getAllSkills(data)),\n  };\n};\n\nexport const FindJobDispatch = (dispatch) => {\n  return {\n    location: (data) => dispatch(jobLocation(data)),\n    skills: (data) => dispatch(jobSkill(data)),\n  };\n};\n\nexport const StepDispatch = (dispatch) => {\n  return {\n    getAllSkills: (data) => dispatch(getAllSkills(data)),\n  };\n};\n\n\nexport const landingPageLocationAndSkillParams = (\n  params,\n  initialJobLocation,\n  finalJobLocation,\n  jobLocation,\n  skill,\n  points\n) => {\n  if (jobLocation !== null) {\n    if (jobLocation.length !== 0) {\n      const selectedLocation = points[jobLocation.split(\",\")[0]];\n        return {\n          ...params,\n          lon: selectedLocation[0],\n          lat: selectedLocation[1],\n        };\n    }\n  } else {\n    return {};\n  }\n};\n\nexport const landingPageLocationAndSkillStr2 = (\n  initialJobLocation,\n  finalJobLocation,\n  jobLocation\n) => {\n  if (jobLocation !== null) {\n    if (jobLocation.length !== 0) {\n      return jobLocation.split(\",\")[0];\n    }\n    return \"\";\n  }\n  return \"\";\n};\n"]},"metadata":{},"sourceType":"module"}