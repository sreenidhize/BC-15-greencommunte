{"ast":null,"code":"export const convertToSentenceCase = skill => {\n  if (skill.includes(\"_\")) {\n    const sentence = skill.toLowerCase().split(\"_\");\n\n    for (let i = 0; i < sentence.length; i++) {\n      sentence[i] = sentence[i][0].toUpperCase() + sentence[i].slice(1);\n    }\n\n    if (sentence[0].length < 3) {\n      sentence[0] = sentence[0].toUpperCase();\n    }\n\n    return sentence.join(\" \");\n  }\n\n  return skill;\n};\nexport const convertServiceToClientJobs = jobs => {\n  return jobs.map(job => ({\n    jobId: job.id,\n    jobTitle: job.title,\n    logoUrl: job.company_logo_url || \"https://m.media-amazon.com/images/I/61b2FkbZsEL._AC_SS350_.jpg\",\n    logoInfo: job.name,\n    companyName: job.name,\n    commuteOptions: [{\n      type: \"metro\"\n    }, {\n      type: \"bus\"\n    }, {\n      type: \"car\"\n    }, {\n      type: \"bike\"\n    }],\n    location: job.address\n  }));\n};\nexport const convertServiceToClientJob = job => {\n  return {\n    jobId: job.id,\n    jobTitle: job.title,\n    url: job.company_logo_url || \"https://m.media-amazon.com/images/I/61b2FkbZsEL._AC_SS350_.jpg\",\n    alt: job.name,\n    companyName: job.name,\n    commuteOptions: [{\n      type: \"metro\"\n    }, {\n      type: \"bus\"\n    }, {\n      type: \"car\"\n    }, {\n      type: \"bike\"\n    }],\n    location: job.address,\n    contentDescription: [{\n      heading: \"Description\",\n      description: [job.description]\n    }, {\n      heading: \"What it takes\",\n      description: job.requirements\n    }]\n  };\n};","map":{"version":3,"sources":["/home/sring/BC-15/devops-bootcamp-jan22/BC15-green-commute/web-ui/src/state/converter/jobConverter.js"],"names":["convertToSentenceCase","skill","includes","sentence","toLowerCase","split","i","length","toUpperCase","slice","join","convertServiceToClientJobs","jobs","map","job","jobId","id","jobTitle","title","logoUrl","company_logo_url","logoInfo","name","companyName","commuteOptions","type","location","address","convertServiceToClientJob","url","alt","contentDescription","heading","description","requirements"],"mappings":"AAAA,OAAO,MAAMA,qBAAqB,GAAIC,KAAD,IAAW;AAC9C,MAAIA,KAAK,CAACC,QAAN,CAAe,GAAf,CAAJ,EAAyB;AACvB,UAAMC,QAAQ,GAAGF,KAAK,CAACG,WAAN,GAAoBC,KAApB,CAA0B,GAA1B,CAAjB;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,QAAQ,CAACI,MAA7B,EAAqCD,CAAC,EAAtC,EAA0C;AACxCH,MAAAA,QAAQ,CAACG,CAAD,CAAR,GAAcH,QAAQ,CAACG,CAAD,CAAR,CAAY,CAAZ,EAAeE,WAAf,KAA+BL,QAAQ,CAACG,CAAD,CAAR,CAAYG,KAAZ,CAAkB,CAAlB,CAA7C;AACD;;AACD,QAAIN,QAAQ,CAAC,CAAD,CAAR,CAAYI,MAAZ,GAAqB,CAAzB,EAA4B;AACxBJ,MAAAA,QAAQ,CAAC,CAAD,CAAR,GAAcA,QAAQ,CAAC,CAAD,CAAR,CAAYK,WAAZ,EAAd;AACH;;AACD,WAAOL,QAAQ,CAACO,IAAT,CAAc,GAAd,CAAP;AACD;;AACD,SAAOT,KAAP;AACD,CAZM;AAcP,OAAO,MAAMU,0BAA0B,GAAIC,IAAD,IAAU;AAClD,SAAOA,IAAI,CAACC,GAAL,CAAUC,GAAD,KAAU;AACxBC,IAAAA,KAAK,EAAED,GAAG,CAACE,EADa;AAExBC,IAAAA,QAAQ,EAAEH,GAAG,CAACI,KAFU;AAGxBC,IAAAA,OAAO,EACLL,GAAG,CAACM,gBAAJ,IACA,gEALsB;AAMxBC,IAAAA,QAAQ,EAAEP,GAAG,CAACQ,IANU;AAOxBC,IAAAA,WAAW,EAAET,GAAG,CAACQ,IAPO;AAQxBE,IAAAA,cAAc,EAAE,CACd;AAAEC,MAAAA,IAAI,EAAE;AAAR,KADc,EAEd;AAAEA,MAAAA,IAAI,EAAE;AAAR,KAFc,EAGd;AAAEA,MAAAA,IAAI,EAAE;AAAR,KAHc,EAId;AAAEA,MAAAA,IAAI,EAAE;AAAR,KAJc,CARQ;AAcxBC,IAAAA,QAAQ,EAAEZ,GAAG,CAACa;AAdU,GAAV,CAAT,CAAP;AAgBD,CAjBM;AAmBP,OAAO,MAAMC,yBAAyB,GAAId,GAAD,IAAS;AAChD,SAAO;AACLC,IAAAA,KAAK,EAAED,GAAG,CAACE,EADN;AAELC,IAAAA,QAAQ,EAAEH,GAAG,CAACI,KAFT;AAGLW,IAAAA,GAAG,EACDf,GAAG,CAACM,gBAAJ,IACA,gEALG;AAMLU,IAAAA,GAAG,EAAEhB,GAAG,CAACQ,IANJ;AAOLC,IAAAA,WAAW,EAAET,GAAG,CAACQ,IAPZ;AAQLE,IAAAA,cAAc,EAAE,CACd;AAAEC,MAAAA,IAAI,EAAE;AAAR,KADc,EAEd;AAAEA,MAAAA,IAAI,EAAE;AAAR,KAFc,EAGd;AAAEA,MAAAA,IAAI,EAAE;AAAR,KAHc,EAId;AAAEA,MAAAA,IAAI,EAAE;AAAR,KAJc,CARX;AAcLC,IAAAA,QAAQ,EAAEZ,GAAG,CAACa,OAdT;AAeLI,IAAAA,kBAAkB,EAAE,CAClB;AACEC,MAAAA,OAAO,EAAE,aADX;AAEEC,MAAAA,WAAW,EAAE,CAACnB,GAAG,CAACmB,WAAL;AAFf,KADkB,EAKlB;AACED,MAAAA,OAAO,EAAE,eADX;AAEEC,MAAAA,WAAW,EAAEnB,GAAG,CAACoB;AAFnB,KALkB;AAff,GAAP;AA0BD,CA3BM","sourcesContent":["export const convertToSentenceCase = (skill) => {\n  if (skill.includes(\"_\")) {\n    const sentence = skill.toLowerCase().split(\"_\");\n    for (let i = 0; i < sentence.length; i++) {\n      sentence[i] = sentence[i][0].toUpperCase() + sentence[i].slice(1);\n    }\n    if (sentence[0].length < 3) {\n        sentence[0] = sentence[0].toUpperCase();\n    } \n    return sentence.join(\" \");\n  }\n  return skill;\n};\n\nexport const convertServiceToClientJobs = (jobs) => {\n  return jobs.map((job) => ({\n    jobId: job.id,\n    jobTitle: job.title,\n    logoUrl:\n      job.company_logo_url ||\n      \"https://m.media-amazon.com/images/I/61b2FkbZsEL._AC_SS350_.jpg\",\n    logoInfo: job.name,\n    companyName: job.name,\n    commuteOptions: [\n      { type: \"metro\" },\n      { type: \"bus\" },\n      { type: \"car\" },\n      { type: \"bike\" },\n    ],\n    location: job.address,\n  }));\n};\n\nexport const convertServiceToClientJob = (job) => {\n  return {\n    jobId: job.id,\n    jobTitle: job.title,\n    url:\n      job.company_logo_url ||\n      \"https://m.media-amazon.com/images/I/61b2FkbZsEL._AC_SS350_.jpg\",\n    alt: job.name,\n    companyName: job.name,\n    commuteOptions: [\n      { type: \"metro\" },\n      { type: \"bus\" },\n      { type: \"car\" },\n      { type: \"bike\" },\n    ],\n    location: job.address,\n    contentDescription: [\n      {\n        heading: \"Description\",\n        description: [job.description],\n      },\n      {\n        heading: \"What it takes\",\n        description: job.requirements,\n      },\n    ],\n  };\n};\n"]},"metadata":{},"sourceType":"module"}