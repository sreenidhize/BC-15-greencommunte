{"ast":null,"code":"import _slicedToArray from\"/home/sring/BC-15/devops-bootcamp-jan22/BC15-green-commute/web-ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _objectWithoutProperties from\"/home/sring/BC-15/devops-bootcamp-jan22/BC15-green-commute/web-ui/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";var _excluded=[\"url\",\"alt\",\"jobId\",\"jobTitle\",\"companyName\",\"location\",\"contentDescription\",\"onClickApply\",\"isPrimary\",\"showFindJobs\"];import React,{useState}from'react';import Grid from'@material-ui/core/Grid';import CompanyLogo from'../../atoms/CompanyLogo/CompanyLogo';import CardLabel from'../../atoms/cardLabel/CardLabel';import Button from'../../atoms/button/Button';import{makeStyles,Snackbar}from\"@material-ui/core\";import{apis}from'../../../utils/resources/resources';import{Alert}from\"@material-ui/lab\";import{headerInfo,jobSavedSuccess,jobAlreadyPresent,jobSavedFailed,failedToRemove}from'../../../utils/constants/constant';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var useStyles=makeStyles({buttonsStyle:{width:\"220px\",marginTop:\"12px\"},columnMargin:{marginLeft:\"8px\"},root:{display:\"flex\"}});var JobDetailsHeader=function JobDetailsHeader(_ref){var url=_ref.url,alt=_ref.alt,jobId=_ref.jobId,jobTitle=_ref.jobTitle,companyName=_ref.companyName,location=_ref.location,contentDescription=_ref.contentDescription,onClickApply=_ref.onClickApply,isPrimary=_ref.isPrimary,showFindJobs=_ref.showFindJobs,props=_objectWithoutProperties(_ref,_excluded);var classes=useStyles();var saveOrRemoveButton=showFindJobs?\"Save\":\"Remove\";var _useState=useState(\"Message\"),_useState2=_slicedToArray(_useState,2),message=_useState2[0],setMessage=_useState2[1];var jobsUrl=new URL(apis.GET_SAVEDJOBS+jobId);var _useState3=useState(\"success\"),_useState4=_slicedToArray(_useState3,2),messageType=_useState4[0],setMessageType=_useState4[1];var savedJobsUrl=new URL(apis.GET_SAVEDJOBS+jobId);var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),showMessage=_useState6[0],setShowMessage=_useState6[1];var onClickSaveOrRemove=function onClickSaveOrRemove(){if(saveOrRemoveButton===\"Save\"){fetch(jobsUrl,{method:'POST',headers:{\"Content-type\":headerInfo}}).then(function(res){if(res.status===200){setMessage(jobSavedSuccess);setMessageType(\"success\");}else if(res.status===409){setMessageType(\"info\");setMessage(jobAlreadyPresent);}else{setMessage(jobSavedFailed);setMessageType(\"error\");}setShowMessage(true);});}else{fetch(savedJobsUrl,{method:'DELETE'}).then(function(res){if(res.status===200){props.itemsRemoved(jobId);}else{setMessage(failedToRemove);setMessageType(\"error\");setShowMessage(true);}setShowMessage(true);});}};return/*#__PURE__*/_jsxs(Grid,{className:classes.root,\"data-testid\":\"jobDetailsHeader-placeholder\",children:[/*#__PURE__*/_jsx(CompanyLogo,{url:url,alt:alt}),/*#__PURE__*/_jsxs(Grid,{container:true,direction:\"column\",className:classes.columnMargin,children:[/*#__PURE__*/_jsx(CardLabel,{label:jobTitle,isPrimary:true,children:\" \"}),/*#__PURE__*/_jsx(CardLabel,{label:companyName,children:\" \"}),/*#__PURE__*/_jsx(CardLabel,{label:location,children:\" \"}),isPrimary?/*#__PURE__*/_jsxs(Grid,{container:true,justify:\"space-between\",className:classes.buttonsStyle,children:[/*#__PURE__*/_jsx(Button,{label:saveOrRemoveButton,type:\"small\",variant:\"outlined\",onClick:onClickSaveOrRemove}),/*#__PURE__*/_jsx(Button,{label:\"Apply\",variant:\"contained\",type:\"small\",onClick:onClickApply})]}):\"\"]}),/*#__PURE__*/_jsx(Snackbar,{anchorOrigin:{vertical:'top',horizontal:'center'},open:showMessage,autoHideDuration:3000,onClose:function onClose(){setShowMessage(false);},children:/*#__PURE__*/_jsx(Alert,{severity:messageType,elevation:6,variant:\"filled\",children:message})})]});};export default JobDetailsHeader;","map":{"version":3,"sources":["/home/sring/BC-15/devops-bootcamp-jan22/BC15-green-commute/web-ui/src/components/molecules/JobDetailsHeader/JobDetailsHeader.js"],"names":["React","useState","Grid","CompanyLogo","CardLabel","Button","makeStyles","Snackbar","apis","Alert","headerInfo","jobSavedSuccess","jobAlreadyPresent","jobSavedFailed","failedToRemove","useStyles","buttonsStyle","width","marginTop","columnMargin","marginLeft","root","display","JobDetailsHeader","url","alt","jobId","jobTitle","companyName","location","contentDescription","onClickApply","isPrimary","showFindJobs","props","classes","saveOrRemoveButton","message","setMessage","jobsUrl","URL","GET_SAVEDJOBS","messageType","setMessageType","savedJobsUrl","showMessage","setShowMessage","onClickSaveOrRemove","fetch","method","headers","then","res","status","itemsRemoved","vertical","horizontal"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport CompanyLogo from '../../atoms/CompanyLogo/CompanyLogo';\nimport CardLabel from '../../atoms/cardLabel/CardLabel';\nimport Button from '../../atoms/button/Button';\nimport {makeStyles, Snackbar} from \"@material-ui/core\";\nimport { apis } from '../../../utils/resources/resources';\nimport {Alert} from \"@material-ui/lab\";\nimport { headerInfo, jobSavedSuccess, jobAlreadyPresent, jobSavedFailed, failedToRemove } from '../../../utils/constants/constant';\n\nconst useStyles = makeStyles({\n    buttonsStyle: {\n        width: \"220px\",\n        marginTop: \"12px\",\n    },\n    columnMargin :{\n        marginLeft:\"8px\",\n    },\n    root:{\n        display: \"flex\"\n    }\n});\n\nconst JobDetailsHeader = ({ url, alt, jobId, jobTitle, companyName, location, contentDescription, onClickApply, isPrimary, showFindJobs, ...props }) => {\n    const classes = useStyles();\n    const saveOrRemoveButton = showFindJobs ? \"Save\" : \"Remove\";\n    const [message, setMessage] = useState(\"Message\");\n    const jobsUrl = new URL(apis.GET_SAVEDJOBS + jobId);\n    const [messageType, setMessageType] = useState(\"success\");\n    const savedJobsUrl = new URL(apis.GET_SAVEDJOBS + jobId);\n    const [showMessage, setShowMessage] = useState(false);\n    const onClickSaveOrRemove = () => {\n        if(saveOrRemoveButton === \"Save\") {\n            fetch(jobsUrl, { \n                method: 'POST', \n                headers: {\n                    \"Content-type\": headerInfo\n                } \n            }) \n            .then((res) => {\n                if (res.status === 200){\n                    setMessage(jobSavedSuccess);\n                    setMessageType(\"success\");\n                } else if (res.status === 409){\n                    setMessageType(\"info\");\n                    setMessage(jobAlreadyPresent);\n                } else {\n                    setMessage(jobSavedFailed);\n                    setMessageType(\"error\");\n                }\n                setShowMessage(true);\n            });\n        }\n        else {\n            fetch(savedJobsUrl, {\n            method: 'DELETE'})\n            .then(res => {\n                if (res.status === 200){\n                    props.itemsRemoved(jobId);\n                } else {\n                    setMessage(failedToRemove);\n                    setMessageType(\"error\");\n                    setShowMessage(true);\n                }\n                setShowMessage(true);\n            });\n\n        }\n    };\n    return (\n        <Grid className={classes.root} data-testid=\"jobDetailsHeader-placeholder\">\n            <CompanyLogo url={url} alt={alt} ></CompanyLogo>\n\n            <Grid container direction=\"column\" className={classes.columnMargin}>\n                <CardLabel label={jobTitle} isPrimary> </CardLabel>\n                <CardLabel label={companyName}> </CardLabel>\n                <CardLabel label={location}> </CardLabel>\n                { isPrimary ?\n                <Grid container justify=\"space-between\" className={classes.buttonsStyle} >\n                    <Button label={saveOrRemoveButton} type=\"small\" variant=\"outlined\" onClick={onClickSaveOrRemove} />\n                    <Button label=\"Apply\" variant=\"contained\" type=\"small\" onClick={onClickApply} />\n                </Grid> :\n                \"\"\n                }\n            </Grid>\n            <Snackbar\n                anchorOrigin={{vertical: 'top', horizontal: 'center'}}\n                open={showMessage}\n                autoHideDuration={3000}\n                onClose={()=> {setShowMessage(false);}}\n            >\n                <Alert severity={messageType} elevation={6} variant=\"filled\">\n                    {message}\n                </Alert>\n            </Snackbar>\n        </Grid>\n\n    );\n};\n\nJobDetailsHeader.propTypes = {\n    url: PropTypes.string,\n    alt: PropTypes.string,\n    jobTitle: PropTypes.string,\n    companyName: PropTypes.string,\n    location: PropTypes.string,\n    isPrimary: PropTypes.bool,\n};\n\nexport default JobDetailsHeader;"]},"metadata":{},"sourceType":"module"}