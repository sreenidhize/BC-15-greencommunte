{"ast":null,"code":"var _jsxFileName = \"/home/sring/BC-15/devops-bootcamp-jan22/BC15-green-commute/web-ui/src/components/molecules/Filter/Filter.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport PropTypes from 'prop-types';\nimport { makeStyles, FormControlLabel } from \"@material-ui/core\";\nimport FilterCheckbox from \"../../atoms/filterCheckbox/FilterCheckbox\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  checkboxLabel: {\n    fontFamily: theme.typography.fontFamily,\n    fontSize: '14px',\n    letterSpacing: '0.1px',\n    width: '74px',\n    height: '22px',\n    lineHeight: '1.57',\n    color: '#5f7381'\n  }\n}));\n\nconst Filter = _ref => {\n  _s();\n\n  let {\n    label,\n    filters,\n    handleChange\n  } = _ref;\n\n  const booleanValue = (checkboxFilters, checkboxLabel) => {\n    for (let i = 0; i < checkboxFilters.length; i++) {\n      if (checkboxFilters[i].label === checkboxLabel) {\n        return checkboxFilters[i].checked;\n      }\n    }\n  };\n\n  const classes = useStyles();\n  const [select, setSelect] = React.useState(booleanValue(filters, label));\n\n  const afterSelected = () => {\n    setSelect(!select);\n  };\n\n  const handleCheckBox = e => {\n    afterSelected();\n    handleChange(e.target.checked, label);\n  };\n\n  return /*#__PURE__*/_jsxDEV(FormControlLabel, {\n    \"data-testid\": \"filter\",\n    control: /*#__PURE__*/_jsxDEV(FilterCheckbox, {\n      checked: select,\n      onChange: handleCheckBox,\n      name: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 26\n    }, this),\n    label: /*#__PURE__*/_jsxDEV(\"span\", {\n      className: classes.checkboxLabel,\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 24\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 13\n  }, this);\n};\n\n_s(Filter, \"RcX0umcbrZ2b9QIv4O0hvPhygYc=\", false, function () {\n  return [useStyles];\n});\n\n_c = Filter;\nFilter.propTypes = {\n  label: PropTypes.string.isRequired,\n  isChecked: PropTypes.bool,\n  handleChange: PropTypes.func\n};\nexport default Filter;\n\nvar _c;\n\n$RefreshReg$(_c, \"Filter\");","map":{"version":3,"sources":["/home/sring/BC-15/devops-bootcamp-jan22/BC15-green-commute/web-ui/src/components/molecules/Filter/Filter.js"],"names":["React","PropTypes","makeStyles","FormControlLabel","FilterCheckbox","useStyles","theme","checkboxLabel","fontFamily","typography","fontSize","letterSpacing","width","height","lineHeight","color","Filter","label","filters","handleChange","booleanValue","checkboxFilters","i","length","checked","classes","select","setSelect","useState","afterSelected","handleCheckBox","e","target","propTypes","string","isRequired","isChecked","bool","func"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,UAAR,EAAoBC,gBAApB,QAA2C,mBAA3C;AACA,OAAOC,cAAP,MAA2B,2CAA3B;;AAEA,MAAMC,SAAS,GAAGH,UAAU,CAAEI,KAAD,KAAY;AACrCC,EAAAA,aAAa,EAAE;AACXC,IAAAA,UAAU,EAAEF,KAAK,CAACG,UAAN,CAAiBD,UADlB;AAEXE,IAAAA,QAAQ,EAAE,MAFC;AAGXC,IAAAA,aAAa,EAAE,OAHJ;AAIXC,IAAAA,KAAK,EAAE,MAJI;AAKXC,IAAAA,MAAM,EAAE,MALG;AAMXC,IAAAA,UAAU,EAAE,MAND;AAOXC,IAAAA,KAAK,EAAE;AAPI;AADsB,CAAZ,CAAD,CAA5B;;AAYA,MAAMC,MAAM,GAAG,QAAoC;AAAA;;AAAA,MAAnC;AAACC,IAAAA,KAAD;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,GAAmC;;AAC/C,QAAMC,YAAY,GAAG,CAACC,eAAD,EAAkBd,aAAlB,KAAoC;AACrD,SAAI,IAAIe,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGD,eAAe,CAACE,MAAnC,EAA2CD,CAAC,EAA5C,EAAgD;AAC5C,UAAGD,eAAe,CAACC,CAAD,CAAf,CAAmBL,KAAnB,KAA6BV,aAAhC,EAA+C;AAC3C,eAAOc,eAAe,CAACC,CAAD,CAAf,CAAmBE,OAA1B;AACH;AACJ;AACJ,GAND;;AAOA,QAAMC,OAAO,GAAGpB,SAAS,EAAzB;AACA,QAAM,CAACqB,MAAD,EAASC,SAAT,IAAsB3B,KAAK,CAAC4B,QAAN,CAAeR,YAAY,CAACF,OAAD,EAAUD,KAAV,CAA3B,CAA5B;;AACA,QAAMY,aAAa,GAAG,MAAM;AACxBF,IAAAA,SAAS,CAAC,CAACD,MAAF,CAAT;AACH,GAFD;;AAGA,QAAMI,cAAc,GAAIC,CAAD,IAAO;AAC1BF,IAAAA,aAAa;AACbV,IAAAA,YAAY,CAACY,CAAC,CAACC,MAAF,CAASR,OAAV,EAAmBP,KAAnB,CAAZ;AACH,GAHD;;AAIA,sBACQ,QAAC,gBAAD;AACI,mBAAY,QADhB;AAEI,IAAA,OAAO,eAAE,QAAC,cAAD;AAAgB,MAAA,OAAO,EAAES,MAAzB;AAAiC,MAAA,QAAQ,EAAEI,cAA3C;AAA2D,MAAA,IAAI,EAAEb;AAAjE;AAAA;AAAA;AAAA;AAAA,YAFb;AAGI,IAAA,KAAK,eAAE;AAAM,MAAA,SAAS,EAAEQ,OAAO,CAAClB,aAAzB;AAAA,gBAA0CU;AAA1C;AAAA;AAAA;AAAA;AAAA;AAHX;AAAA;AAAA;AAAA;AAAA,UADR;AAOH,CAxBD;;GAAMD,M;UAQcX,S;;;KARdW,M;AA0BNA,MAAM,CAACiB,SAAP,GAAmB;AACfhB,EAAAA,KAAK,EAAEhB,SAAS,CAACiC,MAAV,CAAiBC,UADT;AAEfC,EAAAA,SAAS,EAAEnC,SAAS,CAACoC,IAFN;AAGflB,EAAAA,YAAY,EAAElB,SAAS,CAACqC;AAHT,CAAnB;AAMA,eAAetB,MAAf","sourcesContent":["import React from \"react\";\nimport PropTypes from 'prop-types';\nimport {makeStyles, FormControlLabel} from \"@material-ui/core\";\nimport FilterCheckbox from \"../../atoms/filterCheckbox/FilterCheckbox\";\n\nconst useStyles = makeStyles((theme) => ({\n    checkboxLabel: {\n        fontFamily: theme.typography.fontFamily,\n        fontSize: '14px',\n        letterSpacing: '0.1px',\n        width: '74px',\n        height: '22px',\n        lineHeight: '1.57',\n        color: '#5f7381'\n    }\n}));\n\nconst Filter = ({label, filters, handleChange}) => {\n    const booleanValue = (checkboxFilters, checkboxLabel) => {\n        for(let i = 0; i < checkboxFilters.length; i++) {\n            if(checkboxFilters[i].label === checkboxLabel) {\n                return checkboxFilters[i].checked;\n            }\n        }\n    };\n    const classes = useStyles();\n    const [select, setSelect] = React.useState(booleanValue(filters, label));\n    const afterSelected = () => {\n        setSelect(!select);\n    };\n    const handleCheckBox = (e) => {\n        afterSelected();\n        handleChange(e.target.checked, label);\n    };\n    return (\n            <FormControlLabel\n                data-testid=\"filter\"\n                control={<FilterCheckbox checked={select} onChange={handleCheckBox} name={label} />}\n                label={<span className={classes.checkboxLabel} >{label}</span>}  \n            />\n    );\n};\n\nFilter.propTypes = {\n    label: PropTypes.string.isRequired,\n    isChecked: PropTypes.bool,\n    handleChange: PropTypes.func,\n};\n\nexport default Filter;"]},"metadata":{},"sourceType":"module"}