{"ast":null,"code":"var _jsxFileName = \"/home/sring/BC-15/devops-bootcamp-jan22/BC15-green-commute/web-ui/src/components/pages/SavedJobsPage/SavedJobs.js\",\n    _s = $RefreshSig$();\n\nimport { Grid, makeStyles, Snackbar } from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport JobList from \"../../organisms/JobList/JobList\";\nimport Navbar from \"../../organisms/Navbar/Navbar\";\nimport { connect } from \"react-redux\";\nimport { convertServiceToClientJob, convertServiceToClientJobs } from \"../../../state/converter/jobConverter\";\nimport { apis } from \"../../../utils/resources/resources\";\nimport { SavedJobsDispatch } from \"../../../utils/utils/utils\";\nimport JobDetails from \"../../organisms/JobDetails/JobDetails\";\nimport TopHeader from \"../../molecules/TopHeader/TopHeader\";\nimport JobCommuteRoutes from \"../../organisms/JobCommuteRoutes\";\nimport { Alert } from \"@material-ui/lab\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n    alignItems: \"flex-start\",\n    overflow: \"none\"\n  },\n  topHeader: {\n    marginTop: theme.spacing(4),\n    marginBottom: theme.spacing(4)\n  },\n  findJobs: {\n    marginTop: theme.spacing(10)\n  },\n  right: {\n    boxSizing: \"border-box\"\n  }\n}));\n\nconst SavedJobs = props => {\n  _s();\n\n  const classes = useStyles();\n  const url = new URL(apis.GET_SAVEDJOBS);\n  const [isPrimaryJobList, setPrimaryJobList] = useState(true);\n  const [isGreenCommuteClicked, setGreenCommuteClicked] = useState(false);\n  const [message, setMessage] = useState(\"Message\");\n  const [messageType, setMessageType] = useState(\"success\");\n  const [showMessage, setShowMessage] = useState(false);\n\n  const handleSearch = () => {\n    fetch(url).then(res => res.json()).then(res => props.fetchSavedJobs(convertServiceToClientJobs(res))).catch(e => console.log(e));\n  };\n\n  const jobUrl = new URL(apis.GET_JOBS);\n\n  const onJobCardClick = obj => {\n    fetch(jobUrl + obj.jobId).then(res => res.json()).then(res => {\n      props.fetchJob(convertServiceToClientJob(res));\n      setPrimaryJobList(false);\n      setGreenCommuteClicked(false);\n    }).catch(e => console.log(e));\n  };\n\n  const greenCommuteClick = () => {\n    setGreenCommuteClicked(true);\n  };\n\n  const onBackClick = () => {\n    setGreenCommuteClicked(false);\n  };\n\n  const reducerSavedJobs = props.savedJobs;\n  let anyItemRemoved = false;\n\n  const handleRemoved = JobId => {\n    const newSavedJobs = reducerSavedJobs.filter(item => JobId !== item.jobId);\n    setMessage(\"Job removed from saved jobs.\");\n    props.fetchSavedJobs(newSavedJobs);\n    setMessageType(\"success\");\n    setPrimaryJobList(true);\n    setShowMessage(true);\n    anyItemRemoved = true;\n  };\n\n  useEffect(() => {\n    if (anyItemRemoved === false) {\n      handleSearch();\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    className: classes.root,\n    \"data-testid\": \"saved-jobs\",\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 2,\n      children: /*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      item: true,\n      xs: 10,\n      className: classes.right,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        className: classes.topHeader,\n        children: /*#__PURE__*/_jsxDEV(TopHeader, {\n          locationLabel: props.userLocation,\n          profileName: \"Bob Joseph\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        container: true,\n        xs: 12,\n        children: [/*#__PURE__*/_jsxDEV(JobList, {\n          isPrimary: isPrimaryJobList,\n          jobs: reducerSavedJobs,\n          onSearchCLick: handleSearch,\n          onJobCardClick: onJobCardClick,\n          showFindJobs: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), isPrimaryJobList ? \"\" : isGreenCommuteClicked ? /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(JobCommuteRoutes, {\n            selectedCommute: \"metro\",\n            ...props.draftJob,\n            from: props.userLocation,\n            to: props.jobLocation,\n            commuteTypes: props.metroOptions,\n            cabOptions: props.cabOptions,\n            onBackClick: onBackClick,\n            showFindJobs: false,\n            itemsRemoved: id => handleRemoved(id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(JobDetails, {\n            showFindJobs: false,\n            onGreenCommuteClick: greenCommuteClick,\n            itemsRemoved: id => handleRemoved(id),\n            ...props.draftJob\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      autoHideDuration: 3000,\n      open: showMessage,\n      onClose: () => {\n        setShowMessage(false);\n      },\n      anchorOrigin: {\n        vertical: 'top',\n        horizontal: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        elevation: 6,\n        severity: messageType,\n        variant: \"filled\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SavedJobs, \"/Zr73QnPvgVePHgddp6/sBAvIbQ=\", false, function () {\n  return [useStyles];\n});\n\n_c = SavedJobs;\n\nconst mapStateToProps = state => {\n  return {\n    savedJobs: state.savedJobs,\n    draftJob: state.draftJob,\n    userLocation: state.userLocation,\n    cabOptions: state.cabOptions,\n    metroOptions: state.metroOptions\n  };\n};\n\nSavedJobsDispatch();\nexport default connect(mapStateToProps, SavedJobsDispatch)(SavedJobs);\n\nvar _c;\n\n$RefreshReg$(_c, \"SavedJobs\");","map":{"version":3,"sources":["/home/sring/BC-15/devops-bootcamp-jan22/BC15-green-commute/web-ui/src/components/pages/SavedJobsPage/SavedJobs.js"],"names":["Grid","makeStyles","Snackbar","React","useEffect","useState","JobList","Navbar","connect","convertServiceToClientJob","convertServiceToClientJobs","apis","SavedJobsDispatch","JobDetails","TopHeader","JobCommuteRoutes","Alert","useStyles","theme","root","display","alignItems","overflow","topHeader","marginTop","spacing","marginBottom","findJobs","right","boxSizing","SavedJobs","props","classes","url","URL","GET_SAVEDJOBS","isPrimaryJobList","setPrimaryJobList","isGreenCommuteClicked","setGreenCommuteClicked","message","setMessage","messageType","setMessageType","showMessage","setShowMessage","handleSearch","fetch","then","res","json","fetchSavedJobs","catch","e","console","log","jobUrl","GET_JOBS","onJobCardClick","obj","jobId","fetchJob","greenCommuteClick","onBackClick","reducerSavedJobs","savedJobs","anyItemRemoved","handleRemoved","JobId","newSavedJobs","filter","item","userLocation","draftJob","jobLocation","metroOptions","cabOptions","id","vertical","horizontal","mapStateToProps","state"],"mappings":"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","sourcesContent":["import {Grid, makeStyles, Snackbar} from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport JobList from \"../../organisms/JobList/JobList\";\nimport Navbar from \"../../organisms/Navbar/Navbar\";\nimport { connect } from \"react-redux\";\nimport {\n  convertServiceToClientJob,\n  convertServiceToClientJobs,\n} from \"../../../state/converter/jobConverter\";\nimport { apis,} from \"../../../utils/resources/resources\";\nimport { SavedJobsDispatch } from \"../../../utils/utils/utils\";\nimport JobDetails from \"../../organisms/JobDetails/JobDetails\";\nimport TopHeader from \"../../molecules/TopHeader/TopHeader\";\nimport JobCommuteRoutes from \"../../organisms/JobCommuteRoutes\";\nimport {Alert} from \"@material-ui/lab\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    alignItems: \"flex-start\",\n    overflow: \"none\",\n  },\n  topHeader: {\n    marginTop: theme.spacing(4),\n    marginBottom: theme.spacing(4),\n  },\n  findJobs: {\n    marginTop: theme.spacing(10),\n  },\n  right: {\n    boxSizing: \"border-box\",\n  },\n}));\nconst SavedJobs = (props) => {\n  const classes = useStyles();\n  const url = new URL(apis.GET_SAVEDJOBS);\n  const [isPrimaryJobList, setPrimaryJobList] = useState(true);\n  const [isGreenCommuteClicked, setGreenCommuteClicked] = useState(false);\n  const [message, setMessage] = useState(\"Message\");\n  const [messageType, setMessageType] = useState(\"success\");\n  const [showMessage, setShowMessage] = useState(false);\n  const handleSearch = () => {\n    fetch(url)\n      .then((res) => res.json())\n      .then((res) => props.fetchSavedJobs(convertServiceToClientJobs(res)))\n      .catch((e) => console.log(e));\n  };\n  const jobUrl = new URL(apis.GET_JOBS);\n  const onJobCardClick = (obj) => {\n    fetch(jobUrl + obj.jobId)\n      .then((res) => res.json())\n      .then((res) => {\n        props.fetchJob(convertServiceToClientJob(res));\n        setPrimaryJobList(false);\n        setGreenCommuteClicked(false);\n      })\n      .catch((e) => console.log(e));\n  };\n \n  const greenCommuteClick = () => {\n    setGreenCommuteClicked(true);\n  };\n  const onBackClick = () => {\n    setGreenCommuteClicked(false);\n  };\n  const reducerSavedJobs = props.savedJobs;\n  let anyItemRemoved = false;\n  const handleRemoved = (JobId) => {\n    const newSavedJobs = reducerSavedJobs.filter((item) => JobId !== item.jobId);\n    setMessage(\"Job removed from saved jobs.\");\n    props.fetchSavedJobs(newSavedJobs);\n    setMessageType(\"success\");\n    setPrimaryJobList(true);\n    setShowMessage(true);\n    anyItemRemoved = true;\n  };\n  useEffect(() => {\n    if(anyItemRemoved === false) {\n      handleSearch();\n    }    \n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return (\n    <Grid container className={classes.root} data-testid=\"saved-jobs\">\n      <Grid item xs={2}>\n        <Navbar />\n      </Grid>\n      <Grid container item xs={10} className={classes.right}>\n        <Grid item xs={12} className={classes.topHeader}>\n          <TopHeader\n            locationLabel={props.userLocation}\n            profileName=\"Bob Joseph\"\n          />\n        </Grid>\n        <Grid item container xs={12}>\n          <JobList\n            isPrimary={isPrimaryJobList}\n            jobs={reducerSavedJobs}\n            onSearchCLick={handleSearch}\n            onJobCardClick={onJobCardClick}\n            showFindJobs={false}\n          />\n          {isPrimaryJobList ? (\n            \"\"\n          ) : isGreenCommuteClicked ? (\n            <Grid item> \n              <JobCommuteRoutes\n                selectedCommute=\"metro\"\n                {...props.draftJob}\n                from={props.userLocation}\n                to={props.jobLocation}\n                commuteTypes={props.metroOptions}\n                cabOptions={props.cabOptions}\n                onBackClick={onBackClick}\n                showFindJobs={false}\n                itemsRemoved={ (id) => handleRemoved(id)}\n              />\n            </Grid>\n          ) : (\n            <Grid item>\n              <JobDetails\n                showFindJobs={false}\n                onGreenCommuteClick={greenCommuteClick}\n                itemsRemoved={ (id) => handleRemoved(id)}\n                {...props.draftJob}\n              />\n            </Grid>\n          )}\n        </Grid>\n      </Grid>\n      <Snackbar\n          autoHideDuration={3000}\n          open={showMessage}\n          onClose={()=> {setShowMessage(false);}}\n          anchorOrigin={{vertical: 'top', horizontal: 'center'}}\n      >\n        <Alert elevation={6} severity={messageType} variant=\"filled\">\n          {message}\n        </Alert>\n      </Snackbar>\n    </Grid>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    savedJobs: state.savedJobs,\n    draftJob: state.draftJob,\n    userLocation: state.userLocation,\n    cabOptions: state.cabOptions,\n    metroOptions: state.metroOptions,\n  };\n};\n\nSavedJobsDispatch();\n\nexport default connect(mapStateToProps, SavedJobsDispatch)(SavedJobs);\n"]},"metadata":{},"sourceType":"module"}