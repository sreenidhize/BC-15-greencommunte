{"ast":null,"code":"import _slicedToArray from\"/home/sring/BC-15/devops-bootcamp-jan22/BC15-green-commute/web-ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React from\"react\";import{makeStyles,FormControlLabel}from\"@material-ui/core\";import FilterCheckbox from\"../../atoms/filterCheckbox/FilterCheckbox\";import{jsx as _jsx}from\"react/jsx-runtime\";var useStyles=makeStyles(function(theme){return{checkboxLabel:{fontFamily:theme.typography.fontFamily,fontSize:'14px',letterSpacing:'0.1px',width:'74px',height:'22px',lineHeight:'1.57',color:'#5f7381'}};});var Filter=function Filter(_ref){var label=_ref.label,filters=_ref.filters,handleChange=_ref.handleChange;var booleanValue=function booleanValue(checkboxFilters,checkboxLabel){for(var i=0;i<checkboxFilters.length;i++){if(checkboxFilters[i].label===checkboxLabel){return checkboxFilters[i].checked;}}};var classes=useStyles();var _React$useState=React.useState(booleanValue(filters,label)),_React$useState2=_slicedToArray(_React$useState,2),select=_React$useState2[0],setSelect=_React$useState2[1];var afterSelected=function afterSelected(){setSelect(!select);};var handleCheckBox=function handleCheckBox(e){afterSelected();handleChange(e.target.checked,label);};return/*#__PURE__*/_jsx(FormControlLabel,{\"data-testid\":\"filter\",control:/*#__PURE__*/_jsx(FilterCheckbox,{checked:select,onChange:handleCheckBox,name:label}),label:/*#__PURE__*/_jsx(\"span\",{className:classes.checkboxLabel,children:label})});};export default Filter;","map":{"version":3,"sources":["/home/sring/BC-15/devops-bootcamp-jan22/BC15-green-commute/web-ui/src/components/molecules/Filter/Filter.js"],"names":["React","makeStyles","FormControlLabel","FilterCheckbox","useStyles","theme","checkboxLabel","fontFamily","typography","fontSize","letterSpacing","width","height","lineHeight","color","Filter","label","filters","handleChange","booleanValue","checkboxFilters","i","length","checked","classes","useState","select","setSelect","afterSelected","handleCheckBox","e","target"],"mappings":"uJAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,OAAQC,UAAR,CAAoBC,gBAApB,KAA2C,mBAA3C,CACA,MAAOC,CAAAA,cAAP,KAA2B,2CAA3B,C,2CAEA,GAAMC,CAAAA,SAAS,CAAGH,UAAU,CAAC,SAACI,KAAD,QAAY,CACrCC,aAAa,CAAE,CACXC,UAAU,CAAEF,KAAK,CAACG,UAAN,CAAiBD,UADlB,CAEXE,QAAQ,CAAE,MAFC,CAGXC,aAAa,CAAE,OAHJ,CAIXC,KAAK,CAAE,MAJI,CAKXC,MAAM,CAAE,MALG,CAMXC,UAAU,CAAE,MAND,CAOXC,KAAK,CAAE,SAPI,CADsB,CAAZ,EAAD,CAA5B,CAYA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,MAAoC,IAAlCC,CAAAA,KAAkC,MAAlCA,KAAkC,CAA3BC,OAA2B,MAA3BA,OAA2B,CAAlBC,YAAkB,MAAlBA,YAAkB,CAC/C,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,eAAD,CAAkBd,aAAlB,CAAoC,CACrD,IAAI,GAAIe,CAAAA,CAAC,CAAG,CAAZ,CAAeA,CAAC,CAAGD,eAAe,CAACE,MAAnC,CAA2CD,CAAC,EAA5C,CAAgD,CAC5C,GAAGD,eAAe,CAACC,CAAD,CAAf,CAAmBL,KAAnB,GAA6BV,aAAhC,CAA+C,CAC3C,MAAOc,CAAAA,eAAe,CAACC,CAAD,CAAf,CAAmBE,OAA1B,CACH,CACJ,CACJ,CAND,CAOA,GAAMC,CAAAA,OAAO,CAAGpB,SAAS,EAAzB,CACA,oBAA4BJ,KAAK,CAACyB,QAAN,CAAeN,YAAY,CAACF,OAAD,CAAUD,KAAV,CAA3B,CAA5B,oDAAOU,MAAP,qBAAeC,SAAf,qBACA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,EAAM,CACxBD,SAAS,CAAC,CAACD,MAAF,CAAT,CACH,CAFD,CAGA,GAAMG,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,CAAD,CAAO,CAC1BF,aAAa,GACbV,YAAY,CAACY,CAAC,CAACC,MAAF,CAASR,OAAV,CAAmBP,KAAnB,CAAZ,CACH,CAHD,CAIA,mBACQ,KAAC,gBAAD,EACI,cAAY,QADhB,CAEI,OAAO,cAAE,KAAC,cAAD,EAAgB,OAAO,CAAEU,MAAzB,CAAiC,QAAQ,CAAEG,cAA3C,CAA2D,IAAI,CAAEb,KAAjE,EAFb,CAGI,KAAK,cAAE,aAAM,SAAS,CAAEQ,OAAO,CAAClB,aAAzB,UAA0CU,KAA1C,EAHX,EADR,CAOH,CAxBD,CAgCA,cAAeD,CAAAA,MAAf","sourcesContent":["import React from \"react\";\nimport PropTypes from 'prop-types';\nimport {makeStyles, FormControlLabel} from \"@material-ui/core\";\nimport FilterCheckbox from \"../../atoms/filterCheckbox/FilterCheckbox\";\n\nconst useStyles = makeStyles((theme) => ({\n    checkboxLabel: {\n        fontFamily: theme.typography.fontFamily,\n        fontSize: '14px',\n        letterSpacing: '0.1px',\n        width: '74px',\n        height: '22px',\n        lineHeight: '1.57',\n        color: '#5f7381'\n    }\n}));\n\nconst Filter = ({label, filters, handleChange}) => {\n    const booleanValue = (checkboxFilters, checkboxLabel) => {\n        for(let i = 0; i < checkboxFilters.length; i++) {\n            if(checkboxFilters[i].label === checkboxLabel) {\n                return checkboxFilters[i].checked;\n            }\n        }\n    };\n    const classes = useStyles();\n    const [select, setSelect] = React.useState(booleanValue(filters, label));\n    const afterSelected = () => {\n        setSelect(!select);\n    };\n    const handleCheckBox = (e) => {\n        afterSelected();\n        handleChange(e.target.checked, label);\n    };\n    return (\n            <FormControlLabel\n                data-testid=\"filter\"\n                control={<FilterCheckbox checked={select} onChange={handleCheckBox} name={label} />}\n                label={<span className={classes.checkboxLabel} >{label}</span>}  \n            />\n    );\n};\n\nFilter.propTypes = {\n    label: PropTypes.string.isRequired,\n    isChecked: PropTypes.bool,\n    handleChange: PropTypes.func,\n};\n\nexport default Filter;"]},"metadata":{},"sourceType":"module"}