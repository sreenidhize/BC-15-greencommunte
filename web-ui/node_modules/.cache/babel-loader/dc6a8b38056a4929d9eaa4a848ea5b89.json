{"ast":null,"code":"var _jsxFileName = \"/home/sring/BC-15/devops-bootcamp-jan22/BC15-green-commute/web-ui/src/components/atoms/commuteIcon/CommuteIcon.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport TrainOutlinedIcon from \"@material-ui/icons/TrainOutlined\";\nimport { makeStyles } from \"@material-ui/core\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport DirectionsBusIcon from \"@material-ui/icons/DirectionsBus\";\nimport DriveEtaOutlinedIcon from \"@material-ui/icons/DriveEtaOutlined\";\nimport DirectionsBikeOutlinedIcon from \"@material-ui/icons/DirectionsBikeOutlined\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    // width: \"16px\",\n    // height: \"19px\",\n    width: 24,\n    height: 24 // marginRight: 8,\n\n  },\n  iconUnselected: {\n    color: theme.palette.secondary.main\n  },\n  iconSelected: {\n    color: \"#ffffff\"\n  },\n  avatarSelected: {\n    background: theme.palette.primary.main\n  },\n  avatarUnselected: {\n    background: \"transparent\"\n  }\n}));\n\nconst CommuteIcon = _ref => {\n  _s();\n\n  let {\n    type,\n    selected,\n    onClick,\n    ...props\n  } = _ref;\n  const classes = useStyles();\n  const iconColor = selected ? classes[\"iconSelected\"] : classes[\"iconUnselected\"];\n  const avatarColor = selected ? classes[\"avatarSelected\"] : classes[\"avatarUnselected\"];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: props.className,\n    onClick: props.isJobCard ? () => {} : () => {\n      onClick(type);\n    },\n    children: /*#__PURE__*/_jsxDEV(Avatar, {\n      className: avatarColor,\n      children: type === \"metro\" ? /*#__PURE__*/_jsxDEV(TrainOutlinedIcon, {\n        \"data-testid\": \"metro\",\n        className: [classes.root, iconColor].join(\" \")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this) : type === \"bus\" ? /*#__PURE__*/_jsxDEV(DirectionsBusIcon, {\n        \"data-testid\": \"bus\",\n        className: [classes.root, iconColor].join(\" \")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this) : type === \"car\" ? /*#__PURE__*/_jsxDEV(DriveEtaOutlinedIcon, {\n        \"data-testid\": \"car\",\n        className: [classes.root, iconColor].join(\" \")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(DirectionsBikeOutlinedIcon, {\n        \"data-testid\": \"bike\",\n        className: [classes.root, iconColor].join(\" \")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CommuteIcon, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = CommuteIcon;\nCommuteIcon.propTypes = {\n  type: PropTypes.string,\n  onClick: PropTypes.func,\n  selected: PropTypes.bool\n};\nexport default CommuteIcon;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommuteIcon\");","map":{"version":3,"sources":["/home/sring/BC-15/devops-bootcamp-jan22/BC15-green-commute/web-ui/src/components/atoms/commuteIcon/CommuteIcon.js"],"names":["React","PropTypes","TrainOutlinedIcon","makeStyles","Avatar","DirectionsBusIcon","DriveEtaOutlinedIcon","DirectionsBikeOutlinedIcon","useStyles","theme","root","width","height","iconUnselected","color","palette","secondary","main","iconSelected","avatarSelected","background","primary","avatarUnselected","CommuteIcon","type","selected","onClick","props","classes","iconColor","avatarColor","className","isJobCard","join","propTypes","string","func","bool"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport TrainOutlinedIcon from \"@material-ui/icons/TrainOutlined\";\nimport { makeStyles } from \"@material-ui/core\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport DirectionsBusIcon from \"@material-ui/icons/DirectionsBus\";\nimport DriveEtaOutlinedIcon from \"@material-ui/icons/DriveEtaOutlined\";\nimport DirectionsBikeOutlinedIcon from \"@material-ui/icons/DirectionsBikeOutlined\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    // width: \"16px\",\n    // height: \"19px\",\n    width: 24,\n    height: 24,\n    // marginRight: 8,\n  },\n  iconUnselected: {\n    color: theme.palette.secondary.main,\n  },\n  iconSelected: {\n    color: \"#ffffff\",\n  },\n  avatarSelected: {\n    background: theme.palette.primary.main,\n  },\n  avatarUnselected: {\n    background: \"transparent\",\n  },\n}));\n\nconst CommuteIcon = ({ type, selected, onClick, ...props }) => {\n  const classes = useStyles();\n  const iconColor = selected\n    ? classes[\"iconSelected\"]\n    : classes[\"iconUnselected\"];\n  const avatarColor = selected\n    ? classes[\"avatarSelected\"]\n    : classes[\"avatarUnselected\"];\n\n  return (\n    <div\n      className={props.className}\n      onClick={\n        props.isJobCard\n          ? () => {}\n          : () => {\n              onClick(type);\n            }\n      }\n    >\n      <Avatar className={avatarColor}>\n        {type === \"metro\" ? (\n          <TrainOutlinedIcon\n            data-testid=\"metro\"\n            className={[classes.root, iconColor].join(\" \")}\n          />\n        ) : type === \"bus\" ? (\n          <DirectionsBusIcon\n            data-testid=\"bus\"\n            className={[classes.root, iconColor].join(\" \")}\n          />\n        ) : type === \"car\" ? (\n          <DriveEtaOutlinedIcon\n            data-testid=\"car\"\n            className={[classes.root, iconColor].join(\" \")}\n          />\n        ) : (\n          <DirectionsBikeOutlinedIcon\n            data-testid=\"bike\"\n            className={[classes.root, iconColor].join(\" \")}\n          />\n        )}\n      </Avatar>\n    </div>\n  );\n};\n\nCommuteIcon.propTypes = {\n  type: PropTypes.string,\n  onClick: PropTypes.func,\n  selected: PropTypes.bool,\n};\n\nexport default CommuteIcon;\n"]},"metadata":{},"sourceType":"module"}