{"ast":null,"code":"var _jsxFileName = \"/home/sring/BC-15/devops-bootcamp-jan22/BC15-green-commute/web-ui/src/components/organisms/JobCommuteRoutes/index.js\",\n    _s = $RefreshSig$();\n\nimport { Divider, Grid, Paper } from '@material-ui/core';\nimport React, { useState } from 'react';\nimport JobDetailsHeader from '../../molecules/JobDetailsHeader/JobDetailsHeader';\nimport { makeStyles, Snackbar } from \"@material-ui/core\";\nimport ArrowBack from \"@material-ui/icons/ArrowBack\";\nimport CommuteRoutesDescription from '../CommuteRoutesDescription/CommuteRoutesDescription';\nimport CommuteOptions from '../CommuteOptions/CommuteOptions';\nimport Button from '../../atoms/button/Button';\nimport { Alert } from \"@material-ui/lab\";\nimport { apis } from '../../../utils/resources/resources';\nimport { headerInfo, jobSavedSuccess, jobAlreadyPresent, jobSavedFailed, failedToRemove } from '../../../utils/constants/constant';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '390px'\n  },\n  divider: {\n    marginTop: '30px',\n    marginLeft: 15,\n    marginBottom: '30px',\n    width: 360\n  },\n  backIcon: {\n    color: theme.palette.secondary.main,\n    paddingRight: theme.spacing(1),\n    marginTop: -3.5,\n    cursor: 'pointer'\n  },\n  buttonLabel: {\n    fontFamily: theme.typography.fontFamily,\n    height: theme.spacing(2),\n    fontWeight: '500',\n    marginTop: 10\n  },\n  JobCommuteRoutes: {\n    marginTop: 15,\n    marginLeft: 25\n  },\n  CommuteOptions: {\n    padding: 10,\n    marginLeft: 10\n  },\n  BackButton: {\n    marginTop: -6,\n    marginLeft: 25\n  },\n  JobHeader: {\n    marginTop: 30,\n    marginLeft: 25,\n    marginBottom: -10\n  },\n  Paper: {\n    width: 390,\n    border: 0,\n    borderTop: \"solid 1px #e3f3f6\",\n    height: \"calc(100vh - 73px)\",\n    overflowY: \"scroll\",\n    overflowX: \"hidden\"\n  },\n  buttonsStyle: {\n    width: \"390px\",\n    display: \"flex\",\n    marginTop: theme.spacing(4),\n    marginBottom: 25\n  },\n  LastDivider: {\n    width: 390,\n    marginTop: 10,\n    marginBottom: 10,\n    color: \"#e3f3f6\"\n  }\n}));\n\nconst JobCommuteRoutes = props => {\n  _s();\n\n  const classes = useStyles();\n  const {\n    url,\n    alt,\n    jobTitle,\n    companyName,\n    location,\n    from,\n    to,\n    onBackClick,\n    onClickApply,\n    jobId,\n    commuteTypes,\n    cabOptions,\n    showFindJobs\n  } = props;\n  const saveOrRemoveButton = showFindJobs ? \"Save\" : \"Remove\";\n  const [message, setMessage] = useState(\"Message\");\n  const jobsUrl = new URL(apis.GET_SAVEDJOBS + jobId);\n  const [messageType, setMessageType] = useState(\"success\");\n  const savedJobsUrl = new URL(apis.GET_SAVEDJOBS + jobId);\n  const [showMessage, setShowMessage] = useState(false);\n\n  const onClickSaveOrRemove = () => {\n    if (saveOrRemoveButton === \"Save\") {\n      fetch(jobsUrl, {\n        method: 'POST',\n        headers: {\n          \"Content-type\": headerInfo\n        }\n      }).then(res => {\n        if (res.status === 200) {\n          setMessage(jobSavedSuccess);\n          setMessageType(\"success\");\n        } else if (res.status === 409) {\n          setMessageType(\"info\");\n          setMessage(jobAlreadyPresent);\n        } else {\n          setMessage(jobSavedFailed);\n          setMessageType(\"error\");\n        }\n\n        setShowMessage(true);\n      });\n    } else {\n      fetch(savedJobsUrl, {\n        method: 'DELETE'\n      }).then(res => {\n        if (res.status === 200) {\n          props.itemsRemoved(jobId);\n        } else {\n          setMessage(failedToRemove);\n          setMessageType(\"error\");\n          setShowMessage(true);\n        }\n\n        setShowMessage(true);\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    \"data-testid\": \"job-commute-routes\",\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.Paper,\n      elevation: 0,\n      variant: \"outlined\",\n      square: true,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"column\",\n        className: classes.root,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          className: classes.JobHeader,\n          children: /*#__PURE__*/_jsxDEV(JobDetailsHeader, {\n            url: url,\n            alt: alt,\n            jobTitle: jobTitle,\n            location: location,\n            companyName: companyName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(Divider, {\n            variant: \"middle\",\n            className: classes.divider\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          direction: \"row\",\n          className: classes.BackButton,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(ArrowBack, {\n              className: classes.backIcon,\n              onClick: onBackClick\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: classes.buttonLabel,\n              children: \"Commute Routes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          className: classes.JobCommuteRoutes,\n          children: /*#__PURE__*/_jsxDEV(CommuteRoutesDescription, {\n            from: from,\n            to: to\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(Divider, {\n            variant: \"middle\",\n            className: classes.divider\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          className: classes.CommuteOptions,\n          children: /*#__PURE__*/_jsxDEV(CommuteOptions, {\n            commuteTypes: commuteTypes,\n            cabOptions: cabOptions,\n            selectedCommute: \"metro\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(Divider, {\n            className: classes.LastDivider\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            justify: \"space-around\",\n            alignItems: \"center\",\n            className: classes.buttonsStyle,\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              label: saveOrRemoveButton,\n              type: \"medium2\",\n              onClick: onClickSaveOrRemove\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              label: \"Apply\",\n              variant: \"contained\",\n              type: \"medium2\",\n              onClick: onClickApply\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n          anchorOrigin: {\n            vertical: 'top',\n            horizontal: 'center'\n          },\n          open: showMessage,\n          autoHideDuration: 3000,\n          onClose: () => {\n            setShowMessage(false);\n          },\n          children: /*#__PURE__*/_jsxDEV(Alert, {\n            severity: messageType,\n            elevation: 6,\n            variant: \"filled\",\n            children: message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 9\n  }, this);\n};\n\n_s(JobCommuteRoutes, \"RnNfsghtFgAGKHGGoej3T78sSRE=\", false, function () {\n  return [useStyles];\n});\n\n_c = JobCommuteRoutes;\nexport default JobCommuteRoutes;\n\nvar _c;\n\n$RefreshReg$(_c, \"JobCommuteRoutes\");","map":{"version":3,"sources":["/home/sring/BC-15/devops-bootcamp-jan22/BC15-green-commute/web-ui/src/components/organisms/JobCommuteRoutes/index.js"],"names":["Divider","Grid","Paper","React","useState","JobDetailsHeader","makeStyles","Snackbar","ArrowBack","CommuteRoutesDescription","CommuteOptions","Button","Alert","apis","headerInfo","jobSavedSuccess","jobAlreadyPresent","jobSavedFailed","failedToRemove","useStyles","theme","root","width","divider","marginTop","marginLeft","marginBottom","backIcon","color","palette","secondary","main","paddingRight","spacing","cursor","buttonLabel","fontFamily","typography","height","fontWeight","JobCommuteRoutes","padding","BackButton","JobHeader","border","borderTop","overflowY","overflowX","buttonsStyle","display","LastDivider","props","classes","url","alt","jobTitle","companyName","location","from","to","onBackClick","onClickApply","jobId","commuteTypes","cabOptions","showFindJobs","saveOrRemoveButton","message","setMessage","jobsUrl","URL","GET_SAVEDJOBS","messageType","setMessageType","savedJobsUrl","showMessage","setShowMessage","onClickSaveOrRemove","fetch","method","headers","then","res","status","itemsRemoved","vertical","horizontal"],"mappings":";;;AAAA,SAASA,OAAT,EAAkBC,IAAlB,EAAwBC,KAAxB,QAAqC,mBAArC;AACA,OAAOC,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,gBAAP,MAA6B,mDAA7B;AACA,SAAQC,UAAR,EAAoBC,QAApB,QAAmC,mBAAnC;AACA,OAAOC,SAAP,MAAsB,8BAAtB;AACA,OAAOC,wBAAP,MAAqC,sDAArC;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,SAAQC,KAAR,QAAoB,kBAApB;AACA,SAASC,IAAT,QAAqB,oCAArB;AACA,SAASC,UAAT,EAAqBC,eAArB,EAAsCC,iBAAtC,EAAyDC,cAAzD,EAAyEC,cAAzE,QAA+F,mCAA/F;;AAGA,MAAMC,SAAS,GAAGb,UAAU,CAAEc,KAAD,KAAY;AACrCC,EAAAA,IAAI,EAAE;AACFC,IAAAA,KAAK,EAAE;AADL,GAD+B;AAIrCC,EAAAA,OAAO,EAAE;AACLC,IAAAA,SAAS,EAAE,MADN;AAELC,IAAAA,UAAU,EAAE,EAFP;AAGLC,IAAAA,YAAY,EAAE,MAHT;AAILJ,IAAAA,KAAK,EAAE;AAJF,GAJ4B;AAUrCK,EAAAA,QAAQ,EAAE;AACNC,IAAAA,KAAK,EAAER,KAAK,CAACS,OAAN,CAAcC,SAAd,CAAwBC,IADzB;AAENC,IAAAA,YAAY,EAAEZ,KAAK,CAACa,OAAN,CAAc,CAAd,CAFR;AAGNT,IAAAA,SAAS,EAAE,CAAC,GAHN;AAINU,IAAAA,MAAM,EAAE;AAJF,GAV2B;AAgBrCC,EAAAA,WAAW,EAAE;AACTC,IAAAA,UAAU,EAAEhB,KAAK,CAACiB,UAAN,CAAiBD,UADpB;AAETE,IAAAA,MAAM,EAAElB,KAAK,CAACa,OAAN,CAAc,CAAd,CAFC;AAGTM,IAAAA,UAAU,EAAE,KAHH;AAITf,IAAAA,SAAS,EAAE;AAJF,GAhBwB;AAsBrCgB,EAAAA,gBAAgB,EAAE;AACdhB,IAAAA,SAAS,EAAE,EADG;AAEdC,IAAAA,UAAU,EAAE;AAFE,GAtBmB;AA0BrCf,EAAAA,cAAc,EAAE;AACZ+B,IAAAA,OAAO,EAAE,EADG;AAEZhB,IAAAA,UAAU,EAAE;AAFA,GA1BqB;AA8BrCiB,EAAAA,UAAU,EAAE;AACRlB,IAAAA,SAAS,EAAE,CAAC,CADJ;AAERC,IAAAA,UAAU,EAAE;AAFJ,GA9ByB;AAkCrCkB,EAAAA,SAAS,EAAE;AACPnB,IAAAA,SAAS,EAAE,EADJ;AAEPC,IAAAA,UAAU,EAAE,EAFL;AAGPC,IAAAA,YAAY,EAAE,CAAC;AAHR,GAlC0B;AAuCrCxB,EAAAA,KAAK,EAAE;AACHoB,IAAAA,KAAK,EAAE,GADJ;AAEHsB,IAAAA,MAAM,EAAE,CAFL;AAGHC,IAAAA,SAAS,EAAE,mBAHR;AAIHP,IAAAA,MAAM,EAAE,oBAJL;AAKHQ,IAAAA,SAAS,EAAE,QALR;AAMHC,IAAAA,SAAS,EAAE;AANR,GAvC8B;AA+CrCC,EAAAA,YAAY,EAAE;AACV1B,IAAAA,KAAK,EAAE,OADG;AAEV2B,IAAAA,OAAO,EAAE,MAFC;AAGVzB,IAAAA,SAAS,EAAEJ,KAAK,CAACa,OAAN,CAAc,CAAd,CAHD;AAIVP,IAAAA,YAAY,EAAE;AAJJ,GA/CuB;AAqDrCwB,EAAAA,WAAW,EAAE;AACT5B,IAAAA,KAAK,EAAE,GADE;AAETE,IAAAA,SAAS,EAAE,EAFF;AAGTE,IAAAA,YAAY,EAAE,EAHL;AAITE,IAAAA,KAAK,EAAE;AAJE;AArDwB,CAAZ,CAAD,CAA5B;;AA6DA,MAAMY,gBAAgB,GAAIW,KAAD,IAAW;AAAA;;AAChC,QAAMC,OAAO,GAAGjC,SAAS,EAAzB;AACA,QAAM;AAAEkC,IAAAA,GAAF;AAAOC,IAAAA,GAAP;AAAYC,IAAAA,QAAZ;AAAsBC,IAAAA,WAAtB;AAAmCC,IAAAA,QAAnC;AAA6CC,IAAAA,IAA7C;AAAmDC,IAAAA,EAAnD;AAAuDC,IAAAA,WAAvD;AACFC,IAAAA,YADE;AACYC,IAAAA,KADZ;AACmBC,IAAAA,YADnB;AACiCC,IAAAA,UADjC;AAC6CC,IAAAA;AAD7C,MAC8Dd,KADpE;AAEA,QAAMe,kBAAkB,GAAGD,YAAY,GAAG,MAAH,GAAY,QAAnD;AACA,QAAM,CAACE,OAAD,EAAUC,UAAV,IAAwBhE,QAAQ,CAAC,SAAD,CAAtC;AACA,QAAMiE,OAAO,GAAG,IAAIC,GAAJ,CAAQzD,IAAI,CAAC0D,aAAL,GAAqBT,KAA7B,CAAhB;AACA,QAAM,CAACU,WAAD,EAAcC,cAAd,IAAgCrE,QAAQ,CAAC,SAAD,CAA9C;AACA,QAAMsE,YAAY,GAAG,IAAIJ,GAAJ,CAAQzD,IAAI,CAAC0D,aAAL,GAAqBT,KAA7B,CAArB;AACA,QAAM,CAACa,WAAD,EAAcC,cAAd,IAAgCxE,QAAQ,CAAC,KAAD,CAA9C;;AACA,QAAMyE,mBAAmB,GAAG,MAAM;AAC9B,QAAGX,kBAAkB,KAAK,MAA1B,EAAkC;AAC9BY,MAAAA,KAAK,CAACT,OAAD,EAAU;AACXU,QAAAA,MAAM,EAAE,MADG;AAEXC,QAAAA,OAAO,EAAE;AACL,0BAAgBlE;AADX;AAFE,OAAV,CAAL,CAMCmE,IAND,CAMOC,GAAD,IAAS;AACX,YAAIA,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAuB;AACnBf,UAAAA,UAAU,CAACrD,eAAD,CAAV;AACA0D,UAAAA,cAAc,CAAC,SAAD,CAAd;AACH,SAHD,MAGO,IAAIS,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAuB;AAC1BV,UAAAA,cAAc,CAAC,MAAD,CAAd;AACAL,UAAAA,UAAU,CAACpD,iBAAD,CAAV;AACH,SAHM,MAGA;AACHoD,UAAAA,UAAU,CAACnD,cAAD,CAAV;AACAwD,UAAAA,cAAc,CAAC,OAAD,CAAd;AACH;;AACDG,QAAAA,cAAc,CAAC,IAAD,CAAd;AACH,OAlBD;AAmBH,KApBD,MAqBK;AACDE,MAAAA,KAAK,CAACJ,YAAD,EAAe;AACpBK,QAAAA,MAAM,EAAE;AADY,OAAf,CAAL,CAECE,IAFD,CAEMC,GAAG,IAAI;AACT,YAAIA,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAuB;AACnBhC,UAAAA,KAAK,CAACiC,YAAN,CAAmBtB,KAAnB;AACH,SAFD,MAEO;AACHM,UAAAA,UAAU,CAAClD,cAAD,CAAV;AACAuD,UAAAA,cAAc,CAAC,OAAD,CAAd;AACAG,UAAAA,cAAc,CAAC,IAAD,CAAd;AACH;;AACDA,QAAAA,cAAc,CAAC,IAAD,CAAd;AACH,OAXD;AAaH;AACJ,GArCD;;AAsCA,sBACI;AAAK,mBAAY,oBAAjB;AAAA,2BACI,QAAC,KAAD;AAAO,MAAA,SAAS,EAAExB,OAAO,CAAClD,KAA1B;AAAiC,MAAA,SAAS,EAAE,CAA5C;AAA+C,MAAA,OAAO,EAAC,UAAvD;AAAkE,MAAA,MAAM,MAAxE;AAAA,6BACI,QAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,SAAS,EAAC,QAA1B;AAAmC,QAAA,SAAS,EAAEkD,OAAO,CAAC/B,IAAtD;AAAA,gCACI,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,SAAS,EAAE+B,OAAO,CAACT,SAA9B;AAAA,iCACI,QAAC,gBAAD;AACI,YAAA,GAAG,EAAEU,GADT;AAEI,YAAA,GAAG,EAAEC,GAFT;AAGI,YAAA,QAAQ,EAAEC,QAHd;AAII,YAAA,QAAQ,EAAEE,QAJd;AAKI,YAAA,WAAW,EAAED;AALjB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAUI,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAA,iCACI,QAAC,OAAD;AAAS,YAAA,OAAO,EAAC,QAAjB;AAA0B,YAAA,SAAS,EAAEJ,OAAO,CAAC7B;AAA7C;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAVJ,eAaI,QAAC,IAAD;AAAM,UAAA,SAAS,MAAf;AAAgB,UAAA,SAAS,EAAC,KAA1B;AAAgC,UAAA,SAAS,EAAE6B,OAAO,CAACV,UAAnD;AAAA,kCACI,QAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAA,mCACI,QAAC,SAAD;AAAW,cAAA,SAAS,EAAEU,OAAO,CAACzB,QAA9B;AAAwC,cAAA,OAAO,EAAEiC;AAAjD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADJ,eAII,QAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAA,mCACI;AAAM,cAAA,SAAS,EAAER,OAAO,CAACjB,WAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAbJ,eAqBI,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,SAAS,EAAEiB,OAAO,CAACZ,gBAA9B;AAAA,iCACI,QAAC,wBAAD;AAA0B,YAAA,IAAI,EAAEkB,IAAhC;AAAsC,YAAA,EAAE,EAAEC;AAA1C;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBArBJ,eAwBI,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAA,iCACI,QAAC,OAAD;AAAS,YAAA,OAAO,EAAC,QAAjB;AAA0B,YAAA,SAAS,EAAEP,OAAO,CAAC7B;AAA7C;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAxBJ,eA2BI,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,SAAS,EAAE6B,OAAO,CAAC1C,cAA9B;AAAA,iCACI,QAAC,cAAD;AAAgB,YAAA,YAAY,EAAEqD,YAA9B;AAA4C,YAAA,UAAU,EAAEC,UAAxD;AAAoE,YAAA,eAAe,EAAC;AAApF;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBA3BJ,eA8BI,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAA,iCACI,QAAC,OAAD;AAAS,YAAA,SAAS,EAAEZ,OAAO,CAACF;AAA5B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBA9BJ,eAiCI,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAA,iCACI,QAAC,IAAD;AAAM,YAAA,SAAS,MAAf;AAAgB,YAAA,OAAO,EAAC,cAAxB;AAAuC,YAAA,UAAU,EAAC,QAAlD;AAA2D,YAAA,SAAS,EAAEE,OAAO,CAACJ,YAA9E;AAAA,oCACI,QAAC,MAAD;AAAQ,cAAA,KAAK,EAAEkB,kBAAf;AAAmC,cAAA,IAAI,EAAC,SAAxC;AAAkD,cAAA,OAAO,EAAEW;AAA3D;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI,QAAC,MAAD;AAAQ,cAAA,KAAK,EAAC,OAAd;AAAsB,cAAA,OAAO,EAAC,WAA9B;AAA0C,cAAA,IAAI,EAAC,SAA/C;AAAyD,cAAA,OAAO,EAAEhB;AAAlE;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAjCJ,eAuCI,QAAC,QAAD;AACI,UAAA,YAAY,EAAE;AAACwB,YAAAA,QAAQ,EAAE,KAAX;AAAkBC,YAAAA,UAAU,EAAE;AAA9B,WADlB;AAEI,UAAA,IAAI,EAAEX,WAFV;AAGI,UAAA,gBAAgB,EAAE,IAHtB;AAII,UAAA,OAAO,EAAE,MAAK;AAACC,YAAAA,cAAc,CAAC,KAAD,CAAd;AAAuB,WAJ1C;AAAA,iCAMA,QAAC,KAAD;AAAO,YAAA,QAAQ,EAAEJ,WAAjB;AAA8B,YAAA,SAAS,EAAE,CAAzC;AAA4C,YAAA,OAAO,EAAC,QAApD;AAAA,sBACKL;AADL;AAAA;AAAA;AAAA;AAAA;AANA;AAAA;AAAA;AAAA;AAAA,gBAvCJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAwDH,CAxGD;;GAAM3B,gB;UACcrB,S;;;KADdqB,gB;AA0GN,eAAeA,gBAAf","sourcesContent":["import { Divider, Grid, Paper } from '@material-ui/core';\nimport React, {useState} from 'react';\nimport JobDetailsHeader from '../../molecules/JobDetailsHeader/JobDetailsHeader';\nimport {makeStyles, Snackbar} from \"@material-ui/core\";\nimport ArrowBack from \"@material-ui/icons/ArrowBack\";\nimport CommuteRoutesDescription from '../CommuteRoutesDescription/CommuteRoutesDescription';\nimport CommuteOptions from '../CommuteOptions/CommuteOptions';\nimport Button from '../../atoms/button/Button';\nimport {Alert} from \"@material-ui/lab\";\nimport { apis } from '../../../utils/resources/resources';\nimport { headerInfo, jobSavedSuccess, jobAlreadyPresent, jobSavedFailed, failedToRemove } from '../../../utils/constants/constant';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '390px',\n    },\n    divider: {\n        marginTop: '30px',\n        marginLeft: 15,\n        marginBottom: '30px',\n        width: 360,\n    },\n    backIcon: {\n        color: theme.palette.secondary.main,\n        paddingRight: theme.spacing(1),\n        marginTop: -3.5,\n        cursor: 'pointer'\n    },\n    buttonLabel: {\n        fontFamily: theme.typography.fontFamily,\n        height: theme.spacing(2),\n        fontWeight: '500',\n        marginTop: 10,\n    },\n    JobCommuteRoutes: {\n        marginTop: 15,\n        marginLeft: 25,\n    },\n    CommuteOptions: {\n        padding: 10,\n        marginLeft: 10,\n    },\n    BackButton: {\n        marginTop: -6,\n        marginLeft: 25,\n    },\n    JobHeader: {\n        marginTop: 30,\n        marginLeft: 25,\n        marginBottom: -10,\n    },\n    Paper: {\n        width: 390,\n        border: 0,\n        borderTop: \"solid 1px #e3f3f6\",\n        height: \"calc(100vh - 73px)\",\n        overflowY: \"scroll\",\n        overflowX: \"hidden\"\n    },\n    buttonsStyle: {\n        width: \"390px\",\n        display: \"flex\",\n        marginTop: theme.spacing(4),\n        marginBottom: 25,\n    },\n    LastDivider: {\n        width: 390,\n        marginTop: 10,\n        marginBottom: 10,\n        color: \"#e3f3f6\"\n    }\n}));\n\nconst JobCommuteRoutes = (props) => {\n    const classes = useStyles();\n    const { url, alt, jobTitle, companyName, location, from, to, onBackClick,\n        onClickApply, jobId, commuteTypes, cabOptions, showFindJobs } = props;\n    const saveOrRemoveButton = showFindJobs ? \"Save\" : \"Remove\";\n    const [message, setMessage] = useState(\"Message\");\n    const jobsUrl = new URL(apis.GET_SAVEDJOBS + jobId);\n    const [messageType, setMessageType] = useState(\"success\");\n    const savedJobsUrl = new URL(apis.GET_SAVEDJOBS + jobId);\n    const [showMessage, setShowMessage] = useState(false);\n    const onClickSaveOrRemove = () => {\n        if(saveOrRemoveButton === \"Save\") {\n            fetch(jobsUrl, { \n                method: 'POST', \n                headers: {\n                    \"Content-type\": headerInfo\n                } \n            }) \n            .then((res) => {\n                if (res.status === 200){\n                    setMessage(jobSavedSuccess);\n                    setMessageType(\"success\");\n                } else if (res.status === 409){\n                    setMessageType(\"info\");\n                    setMessage(jobAlreadyPresent);\n                } else {\n                    setMessage(jobSavedFailed);\n                    setMessageType(\"error\");\n                }\n                setShowMessage(true);\n            });\n        }\n        else {\n            fetch(savedJobsUrl, {\n            method: 'DELETE'})\n            .then(res => {\n                if (res.status === 200){\n                    props.itemsRemoved(jobId);\n                } else {\n                    setMessage(failedToRemove);\n                    setMessageType(\"error\");\n                    setShowMessage(true);\n                }\n                setShowMessage(true);\n            });\n\n        }\n    };\n    return (\n        <div data-testid=\"job-commute-routes\">\n            <Paper className={classes.Paper} elevation={0} variant=\"outlined\" square>\n                <Grid container direction=\"column\" className={classes.root}>\n                    <Grid item className={classes.JobHeader}>\n                        <JobDetailsHeader\n                            url={url}\n                            alt={alt}\n                            jobTitle={jobTitle}\n                            location={location}\n                            companyName={companyName}\n                        />\n                    </Grid>\n                    <Grid item>\n                        <Divider variant=\"middle\" className={classes.divider}></Divider>\n                    </Grid>\n                    <Grid container direction=\"row\" className={classes.BackButton}>\n                        <Grid item>\n                            <ArrowBack className={classes.backIcon} onClick={onBackClick}/>\n                        </Grid>\n                        <Grid item>\n                            <span className={classes.buttonLabel}>Commute Routes</span>\n                        </Grid>\n                    </Grid>\n                    <Grid item className={classes.JobCommuteRoutes}>\n                        <CommuteRoutesDescription from={from} to={to} />\n                    </Grid>\n                    <Grid item>\n                        <Divider variant=\"middle\" className={classes.divider}></Divider>\n                    </Grid>\n                    <Grid item className={classes.CommuteOptions}>\n                        <CommuteOptions commuteTypes={commuteTypes} cabOptions={cabOptions} selectedCommute=\"metro\" />\n                    </Grid>\n                    <Grid item>\n                        <Divider className={classes.LastDivider}></Divider>\n                    </Grid>\n                    <Grid item>\n                        <Grid container justify=\"space-around\" alignItems=\"center\" className={classes.buttonsStyle} >\n                            <Button label={saveOrRemoveButton} type=\"medium2\" onClick={onClickSaveOrRemove} />\n                            <Button label=\"Apply\" variant=\"contained\" type=\"medium2\" onClick={onClickApply} />\n                        </Grid>\n                    </Grid>\n                    <Snackbar\n                        anchorOrigin={{vertical: 'top', horizontal: 'center'}}\n                        open={showMessage}\n                        autoHideDuration={3000}\n                        onClose={()=> {setShowMessage(false);}}\n                    >\n                    <Alert severity={messageType} elevation={6} variant=\"filled\">\n                        {message}\n                    </Alert>\n                    </Snackbar>\n                </Grid>\n            </Paper>\n        </div>\n    );\n};\n\nexport default JobCommuteRoutes;"]},"metadata":{},"sourceType":"module"}