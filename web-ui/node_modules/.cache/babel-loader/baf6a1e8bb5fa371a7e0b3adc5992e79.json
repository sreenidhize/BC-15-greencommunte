{"ast":null,"code":"var _jsxFileName = \"/home/sring/BC-15/devops-bootcamp-jan22/BC15-green-commute/web-ui/src/components/organisms/CommuteOptions/CommuteOptions.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { makeStyles, Typography, Grid } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport TransitType from \"../../molecules/TransitType/TransitType\";\nimport CommuteRoutes from \"../../molecules/CommuteRoutes/CommuteRoutes\";\nimport CabOptions from \"../../molecules/CabOptions/CabOptions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"350px\"\n  },\n  optionsLabel: {\n    fontSize: \"16px\",\n    color: \"#19293b\"\n  },\n  routeLabel: {\n    paddingTop: theme.spacing(2),\n    fontSize: \"14px\",\n    paddingBottom: theme.spacing(2),\n    color: \"#19293b\",\n    fontWeight: \"normal\"\n  },\n  googleMapsLabel: {\n    paddingTop: theme.spacing(4),\n    fontSize: \"14px\"\n  },\n  routeDetails: {\n    paddingTop: theme.spacing(2),\n    fontSize: \"12px\",\n    color: \"#19293b\"\n  }\n}));\nconst defaultCommutes = [{\n  type: \"metro\"\n}, {\n  type: \"bus\"\n}, {\n  type: \"car\"\n}, {\n  type: \"bike\"\n}];\n\nconst selectCommute = type => {\n  return defaultCommutes.map(obj => {\n    obj.type === type ? obj.selected = true : obj.selected = false;\n    return obj;\n  });\n};\n\nconst CommuteOptions = _ref => {\n  _s();\n\n  let {\n    commuteTypes,\n    cabOptions,\n    selectedCommute\n  } = _ref;\n  const [commute, setCommute] = useState(selectedCommute);\n  const icons = selectCommute(commute);\n  const classes = useStyles();\n\n  const changeCommute = type => {\n    setCommute(type);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    \"data-testid\": \"commute-options\",\n    direction: \"column\",\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      container: true,\n      justify: \"space-between\",\n      alignItems: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        className: classes.optionsLabel,\n        children: \"Your Options\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CommuteRoutes, {\n        icons: icons,\n        primary: false,\n        isJobCard: false,\n        onClick: changeCommute\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), commute !== \"car\" ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        container: true,\n        justify: \"space-between\",\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          className: classes.routeLabel,\n          children: \"Maredpally - Hitech City\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle2\",\n          className: classes.routeDetails,\n          children: \"$50 \\u2022 56 mins\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: commuteTypes.map(item => /*#__PURE__*/_jsxDEV(TransitType, {\n          description: item.description,\n          type: item.type,\n          fare: item.fare,\n          isLate: item.isLate,\n          lateStatus: item.lateStatus,\n          time: item.time\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          color: \"primary\",\n          className: classes.googleMapsLabel,\n          children: \"View in google maps\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(CabOptions, {\n          options: cabOptions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this)\n    }, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CommuteOptions, \"OFAkAj/Zg/Vziht4UUPK9/nyBWA=\", false, function () {\n  return [useStyles];\n});\n\n_c = CommuteOptions;\nCommuteOptions.propTypes = {\n  commuteTypes: PropTypes.array.isRequired\n};\nexport default CommuteOptions;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommuteOptions\");","map":{"version":3,"sources":["/home/sring/BC-15/devops-bootcamp-jan22/BC15-green-commute/web-ui/src/components/organisms/CommuteOptions/CommuteOptions.js"],"names":["React","useState","makeStyles","Typography","Grid","PropTypes","TransitType","CommuteRoutes","CabOptions","useStyles","theme","root","width","optionsLabel","fontSize","color","routeLabel","paddingTop","spacing","paddingBottom","fontWeight","googleMapsLabel","routeDetails","defaultCommutes","type","selectCommute","map","obj","selected","CommuteOptions","commuteTypes","cabOptions","selectedCommute","commute","setCommute","icons","classes","changeCommute","item","description","fare","isLate","lateStatus","time","propTypes","array","isRequired"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { makeStyles, Typography, Grid } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport TransitType from \"../../molecules/TransitType/TransitType\";\nimport CommuteRoutes from \"../../molecules/CommuteRoutes/CommuteRoutes\";\nimport CabOptions from \"../../molecules/CabOptions/CabOptions\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"350px\",\n  },\n  optionsLabel: {\n    fontSize: \"16px\",\n    color: \"#19293b\",\n  },\n  routeLabel: {\n    paddingTop: theme.spacing(2),\n    fontSize: \"14px\",\n    paddingBottom: theme.spacing(2),\n    color: \"#19293b\",\n    fontWeight: \"normal\",\n  },\n  googleMapsLabel: {\n    paddingTop: theme.spacing(4),\n    fontSize: \"14px\",\n  },\n  routeDetails: {\n    paddingTop: theme.spacing(2),\n    fontSize: \"12px\",\n    color: \"#19293b\",\n  },\n}));\n\nconst defaultCommutes = [\n  { type: \"metro\" },\n  { type: \"bus\" },\n  { type: \"car\" },\n  { type: \"bike\" },\n];\n\nconst selectCommute = (type) => {\n  return defaultCommutes.map((obj) => {\n    obj.type === type ? (obj.selected = true) : (obj.selected = false);\n    return obj;\n  });\n};\n\nconst CommuteOptions = ({ commuteTypes, cabOptions, selectedCommute }) => {\n  const [commute, setCommute] = useState(selectedCommute);\n  const icons = selectCommute(commute);\n\n  const classes = useStyles();\n\n  const changeCommute = (type) => {\n    setCommute(type);\n  };\n\n  return (\n    <Grid\n      container\n      data-testid=\"commute-options\"\n      direction=\"column\"\n      className={classes.root}\n    >\n      <Grid item container justify=\"space-between\" alignItems='center'>\n        <Typography variant={\"h4\"} className={classes.optionsLabel}>\n          Your Options\n        </Typography>\n        <CommuteRoutes\n          icons={icons}\n          primary={false}\n          isJobCard={false}\n          onClick={changeCommute}\n        />\n      </Grid>\n\n      {commute !== \"car\" ? (\n        <>\n          <Grid item container justify=\"space-between\">\n            <Typography variant={\"h4\"} className={classes.routeLabel}>\n              Maredpally - Hitech City\n            </Typography>\n            <Typography variant={\"subtitle2\"} className={classes.routeDetails}>\n              $50 &bull; 56 mins\n            </Typography>\n          </Grid>\n          <Grid item>\n            {commuteTypes.map((item) => (\n              <TransitType\n                description={item.description}\n                type={item.type}\n                fare={item.fare}\n                isLate={item.isLate}\n                lateStatus={item.lateStatus}\n                time={item.time}\n              />\n            ))}\n          </Grid>\n          <Grid item>\n            <Typography\n              variant={\"h6\"}\n              color={\"primary\"}\n              className={classes.googleMapsLabel}\n            >\n              View in google maps\n            </Typography>\n          </Grid>\n        </>\n      ) : (\n        <>\n          <Grid item>\n            <CabOptions options={cabOptions} />\n          </Grid>\n        </>\n      )}\n    </Grid>\n  );\n};\n\nCommuteOptions.propTypes = {\n  commuteTypes: PropTypes.array.isRequired,\n};\n\nexport default CommuteOptions;\n"]},"metadata":{},"sourceType":"module"}